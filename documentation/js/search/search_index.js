var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.378,1,0.873]],["body/components/AppComponent.html",[0,0.628,1,1.535,2,1.653,3,0.291,4,0.291,5,1.371,6,1.371,7,1.371,8,1.371,9,0.248,10,3.046,11,1.371,12,2.221,13,2.05,14,1.792,15,1.653,16,5.302,17,1.653,18,4.76,19,0.336,20,0.772,21,5.302,22,0.382,23,0.031,24,0.649,25,2.126,26,2.126,27,3.981,28,4.76,29,0.535,30,3.643,31,0.382,32,0.482,33,0.291,34,0.053,35,1.168,36,1.792,37,1.653,38,1.371,39,2.117,40,1.371,41,0.772,42,1.371,43,0.995,44,1.371,45,0.995,46,1.371,47,0.917,48,1.168,49,1.792,50,0.844,51,1.371,52,0.917,53,1.168,54,0.995,55,1.371,56,0.995,57,1.371,58,0.995,59,1.371,60,0.917,61,1.168,62,1.371,63,1.371,64,0.017,65,0.023,66,0.017]],["title/interceptors/AppInterceptorService.html",[67,2.071,68,1.865]],["body/interceptors/AppInterceptorService.html",[3,0.294,4,0.294,9,0.251,14,1.388,19,0.34,22,0.504,23,0.032,29,0.705,31,0.593,32,0.488,33,0.294,34,0.053,41,0.778,64,0.018,65,0.023,66,0.018,68,2.8,69,3.687,70,3.885,71,3.084,72,0.657,73,4.798,74,4.798,75,1.111,76,4.798,77,5.333,78,4.798,79,5.648,80,3.687,81,1.111,82,1.111,83,2.389,84,1.021,85,2.836,86,3.687,87,5.648,88,5.333,89,5.648,90,3.687,91,4.798,92,3.687,93,4.798,94,1.638,95,1.021,96,3.687,97,1.638,98,2.686,99,2.686,100,1.638,101,1.281,102,1.955,103,0.598,104,3.687,105,3.687,106,2.131,107,3.687,108,3.687]],["title/modules/AppModule.html",[109,2.071,110,2.071]],["body/modules/AppModule.html",[1,1.662,3,0.216,4,0.216,9,0.184,13,1.246,23,0.032,31,0.667,32,0.359,33,0.216,34,0.039,35,0.869,43,1.493,45,1.493,47,1.376,48,0.869,50,1.267,52,1.376,53,0.869,54,1.493,56,1.493,58,1.493,60,1.376,64,0.013,65,0.018,66,0.013,68,3.192,94,1.204,109,1.756,110,4.226,111,1.582,112,1.756,113,3.8,114,3.216,115,3.8,116,1.975,117,2.267,118,2.267,119,2.267,120,2.267,121,2.267,122,3.192,123,3.25,124,2.267,125,2.267,126,2.71,127,3.25,128,3.25,129,3.887,130,3.25,131,3.887,132,2.267,133,1.756,134,3.887,135,2.267,136,3.887,137,2.71,138,2.71,139,2.267,140,3.887,141,2.267,142,2.267,143,2.267,144,2.71,145,2.71,146,1.756,147,3.25,148,3.887,149,3.887,150,2.71,151,1.756,152,2.71,153,2.71,154,2.71,155,2.71,156,2.71,157,2.71,158,1.582]],["title/classes/AppPage.html",[34,0.046,159,2.328]],["body/classes/AppPage.html",[3,0.346,4,0.346,9,0.294,14,1.63,19,0.399,23,0.031,29,0.78,31,0.455,33,0.346,34,0.063,37,1.504,64,0.021,65,0.025,66,0.021,75,1.23,84,1.13,106,2.359,133,2.806,159,3.869,160,2.296,161,3.621,162,6.255,163,5.989,164,5.989,165,4.33,166,5.989,167,4.33,168,4.33,169,4.33,170,4.33,171,2.806,172,4.33]],["title/modules/AppRoutingModule.html",[109,2.071,122,1.865]],["body/modules/AppRoutingModule.html",[0,0.692,3,0.323,4,0.323,9,0.275,23,0.032,31,0.646,32,0.535,33,0.323,34,0.058,47,1.281,48,1.296,50,1.179,52,1.281,53,1.296,60,1.281,61,1.296,64,0.019,65,0.024,66,0.019,70,2.944,111,2.359,116,2.944,122,2.97,127,3.38,128,4.255,139,3.38,143,3.38,146,2.619,147,4.255,151,2.619,173,4.041,174,5.088,175,3.608,176,2.619,177,2.359,178,5.845,179,2.143,180,4.041,181,4.041]],["title/classes/Comment.html",[34,0.046,182,1.548]],["body/classes/Comment.html",[3,0.258,4,0.258,9,0.22,19,0.298,20,0.712,22,0.632,23,0.031,24,0.998,29,0.884,31,0.461,33,0.258,34,0.047,41,0.809,64,0.015,65,0.021,66,0.015,72,0.576,75,1.018,81,1.157,82,1.157,84,0.935,103,0.524,160,1.713,182,2.595,183,2.702,184,2.565,185,2.565,186,2.971,187,2.218,188,2.227,189,4.993,190,1.054,191,2.568,192,4.394,193,4.394,194,4.394,195,3.128,196,2.038,197,2.595,198,4.394,199,3.231,200,3.231,201,3.231,202,3.675,203,3.231,204,4.394,205,3.231,206,1.586,207,4.394,208,3.231,209,2.702,210,4.394,211,2.38,212,4.394,213,3.675,214,4.394]],["title/components/CommentComponent.html",[0,0.378,43,0.873]],["body/components/CommentComponent.html",[0,0.52,1,0.698,2,1.294,3,0.204,4,0.204,5,0.962,6,0.962,7,0.962,8,0.962,9,0.174,11,0.962,12,2.091,13,1.93,15,1.294,17,1.294,19,0.236,20,0.604,22,0.563,23,0.032,24,0.914,29,0.812,31,0.507,32,0.338,33,0.204,34,0.037,35,0.819,36,1.402,37,1.294,38,0.962,39,1.818,40,0.962,41,0.832,42,0.962,43,1.319,44,0.962,45,0.698,46,0.962,47,0.643,48,0.819,49,1.402,50,0.592,51,0.962,52,0.643,53,0.819,54,0.698,55,0.962,56,0.698,57,0.962,58,0.698,59,0.962,60,0.643,61,0.819,62,0.962,63,0.962,64,0.012,65,0.018,66,0.012,75,0.863,81,1.018,82,1.018,84,0.935,101,1.294,103,0.414,177,1.491,182,2.595,186,2.56,190,0.663,195,3.31,196,1.909,197,2.339,206,1.586,211,1.135,215,2.137,216,1.654,217,4.394,218,3.724,219,2.847,220,1.718,221,2.713,222,3.115,223,1.818,224,2.713,225,2.137,226,3.128,227,3.724,228,2.555,229,3.115,230,2.555,231,3.115,232,2.555,233,2.555,234,2.555,235,3.201,236,2.555,237,2.555,238,2.555,239,2.137,240,1.135,241,2.555,242,2.555,243,2.137,244,2.137,245,2.137,246,2.555,247,2.555,248,2.555,249,1.355,250,2.555,251,3.724,252,3.724,253,3.724,254,2.555,255,2.555,256,1.861,257,2.555,258,2.555,259,2.555]],["title/injectables/CommentService.html",[95,0.68,226,1.865]],["body/injectables/CommentService.html",[3,0.219,4,0.219,9,0.187,14,1.033,19,0.253,20,0.636,22,0.554,23,0.032,24,0.889,29,0.775,31,0.524,32,0.363,33,0.219,34,0.04,41,0.742,64,0.013,65,0.019,66,0.013,72,0.889,75,0.909,81,1.06,82,1.06,84,1.23,85,2.85,94,1.219,95,0.835,97,1.219,100,1.219,103,0.445,106,1.742,182,3.04,187,1.742,188,1.879,191,2.439,195,2.671,196,1.467,219,3.559,220,1.761,221,2.857,222,3.28,226,2.289,231,3.28,240,1.219,260,1.329,261,2.296,262,2.541,263,2.541,264,3.922,265,4.576,266,4.576,267,1.602,268,2.647,269,3.922,270,3.28,271,4.001,272,2.857,273,3.12,274,1.899,275,2.857,276,3.922,277,2.745,278,2.541,279,2.857,280,2.541,281,3.28,282,4.992,283,4.992,284,2.745,285,3.922,286,3.922,287,3.922,288,2.289,289,2.745,290,3.28,291,3.28,292,1.589,293,2.745,294,2.745,295,2.745,296,2.745,297,2.745,298,2.745]],["title/components/FeedComponent.html",[0,0.378,45,0.873]],["body/components/FeedComponent.html",[0,0.592,1,0.886,2,1.531,3,0.259,4,0.259,5,1.222,6,1.222,7,1.222,8,1.222,9,0.221,11,1.222,12,2.182,13,2.014,15,1.531,17,1.531,19,0.299,22,0.341,23,0.032,29,0.476,31,0.463,32,0.429,33,0.259,34,0.047,35,1.04,36,1.659,37,1.531,38,1.222,39,2.021,40,1.222,41,0.714,42,1.222,43,0.886,44,1.222,45,1.466,46,1.222,47,0.817,48,1.04,49,1.659,50,0.752,51,1.222,52,0.817,53,1.04,54,0.886,55,1.222,56,0.886,57,1.222,58,0.886,59,1.222,60,0.817,61,1.04,62,1.222,63,1.222,64,0.015,65,0.021,66,0.015,72,0.578,101,1.531,102,2.336,103,0.526,188,2.18,206,0.96,216,1.884,223,1.222,224,3.21,235,3.21,288,3.133,299,2.714,300,4.407,301,4.407,302,2.846,303,3.686,304,5.004,305,4.407,306,2.976,307,3.245,308,2.103,309,2.714,310,2.714,311,2.364,312,2.714,313,2.364,314,2.364]],["title/components/FirstPageComponent.html",[0,0.378,47,0.804]],["body/components/FirstPageComponent.html",[0,0.598,1,0.901,2,1.549,3,0.264,4,0.264,5,1.243,6,1.243,7,1.243,8,1.243,9,0.224,11,1.243,12,2.188,13,2.02,15,1.549,17,1.549,23,0.031,31,0.347,32,0.437,33,0.264,34,0.048,35,1.058,36,1.679,37,1.549,38,1.243,39,2.035,40,1.243,41,0.723,42,1.243,43,0.901,44,1.243,45,0.901,46,1.243,47,1.361,48,1.987,49,1.679,50,0.765,51,1.243,52,0.831,53,1.058,54,0.901,55,1.243,56,0.901,57,1.243,58,0.901,59,1.243,60,0.831,61,1.058,62,1.243,63,1.243,64,0.016,65,0.021,66,0.016,72,0.588,101,1.549,102,2.364,103,0.535,151,2.139,190,0.794,206,0.977,216,1.901,223,1.243,315,2.761,316,2.405,317,4.459,318,3.503,319,4.459,320,4.459,321,4.459,322,4.222,323,3.729,324,4.459,325,4.459,326,4.459,327,3.248,328,4.459,329,4.459,330,3.729,331,3.248]],["title/classes/Follow.html",[34,0.046,332,1.865]],["body/classes/Follow.html",[3,0.345,4,0.345,9,0.294,19,0.398,20,0.859,22,0.602,23,0.031,29,0.843,31,0.453,33,0.345,34,0.062,64,0.02,65,0.025,66,0.02,72,0.769,160,2.289,184,3.094,185,3.094,187,2.549,190,1.148,196,1.7,280,3.435,332,3.094,333,3.611,334,5.136,335,4.318,336,4.318,337,4.318]],["title/injectables/FollowService.html",[95,0.68,338,2.071]],["body/injectables/FollowService.html",[3,0.256,4,0.256,9,0.218,14,1.209,19,0.296,20,0.709,22,0.62,23,0.032,24,1.028,29,0.867,31,0.561,32,0.425,33,0.256,34,0.046,41,0.866,64,0.015,65,0.021,66,0.015,72,0.572,75,1.014,81,1.238,82,1.238,84,1.059,85,2.708,94,1.426,95,0.931,97,1.426,100,1.426,103,0.52,106,1.943,196,1.85,197,2.588,206,1.295,240,1.426,260,1.555,262,2.835,263,2.835,267,1.874,268,2.833,273,2.319,332,3.264,334,3.659,338,2.835,339,2.685,340,3.187,341,3.659,342,4.977,343,4.977,344,4.977,345,3.659,346,4.375,347,4.375,348,4.375,349,3.659,350,3.21,351,4.375,352,3.21,353,4.375,354,3.21,355,3.21,356,3.21,357,3.21,358,3.21,359,3.21,360,3.21,361,3.21,362,3.21,363,3.21,364,3.21,365,3.21]],["title/interfaces/IUser.html",[366,1.548,367,1.548]],["body/interfaces/IUser.html",[3,0.415,4,0.279,9,0.237,14,1.315,19,0.322,20,0.75,22,0.486,23,0.032,24,1.075,31,0.621,32,0.462,33,0.279,34,0.05,64,0.017,65,0.022,66,0.017,84,0.743,85,2.242,94,1.551,95,0.985,97,1.551,98,2.544,99,2.544,100,1.551,106,1.551,190,0.985,191,1.551,220,1.484,240,1.551,268,2.454,273,1.851,292,1.804,331,2.544,366,1.691,367,2.515,368,2.544,369,2.544,370,3.135,371,1.896,372,2.92,373,2.92,374,1.484,375,1.955,376,1.427,377,2.92,378,2.92,379,1.851,380,2.92,381,2.056,382,1.551,383,2.92,384,3.871,385,2.92,386,2.92,387,2.92,388,2.92,389,2.92,390,2.92,391,3.871,392,3.871,393,3.871,394,1.691,395,2.92,396,2.92]],["title/interfaces/IUser-1.html",[366,1.292,367,1.292,397,2.669]],["body/interfaces/IUser-1.html",[0,0.477,3,0.228,4,0.228,9,0.194,12,0.991,13,0.915,15,0.991,17,0.991,19,0.263,20,0.654,22,0.423,23,0.032,24,1.04,31,0.533,32,0.377,33,0.228,34,0.041,50,0.661,64,0.014,65,0.019,66,0.014,67,1.849,83,3.472,95,0.995,101,0.991,102,1.513,103,0.463,158,2.729,176,1.849,177,1.665,179,2.478,190,0.955,206,1.193,216,1.518,220,1.499,223,1.074,249,1.513,292,1.624,302,1.513,318,1.849,366,1.382,367,2.264,368,2.079,370,3.096,371,1.872,374,1.293,375,1.76,376,1.166,379,2.693,381,1.791,382,1.267,394,1.952,398,2.079,399,4.482,400,2.386,401,2.386,402,3.372,403,2.386,404,2.386,405,3.372,406,3.029,407,2.386,408,2.386,409,2.079,410,1.849,411,2.386,412,2.079,413,2.386,414,2.079,415,1.849,416,2.079,417,1.665,418,2.079,419,2.079,420,2.386,421,2.386,422,2.386,423,1.849,424,2.937,425,3.406,426,3.406,427,2.937,428,3.372,429,2.386,430,2.079,431,2.386,432,1.849,433,2.386,434,1.665,435,2.386,436,2.386,437,2.386]],["title/injectables/LoggedUserService.html",[95,0.68,374,1.025]],["body/injectables/LoggedUserService.html",[3,0.317,4,0.317,9,0.27,14,1.494,19,0.366,20,0.815,22,0.58,23,0.031,24,1.034,29,0.88,31,0.417,32,0.525,33,0.317,34,0.057,41,0.895,64,0.019,65,0.024,66,0.019,72,0.707,75,1.165,84,0.844,95,1.07,100,1.762,103,0.895,184,2.935,185,2.935,187,2.453,190,0.896,191,2.453,196,1.612,206,1.174,260,1.921,371,1.77,374,1.612,375,1.893,438,5.119,439,3.318,440,5.805,441,5.029,442,3.967,443,3.967,444,3.967]],["title/components/LoginComponent.html",[0,0.378,50,0.74]],["body/components/LoginComponent.html",[0,0.452,1,0.552,2,1.085,3,0.162,4,0.162,5,0.762,6,0.762,7,0.762,8,0.762,9,0.138,11,0.762,12,1.988,13,1.835,15,1.085,17,1.085,19,0.186,20,0.507,22,0.487,23,0.032,24,0.911,25,1.824,26,1.824,29,0.751,31,0.451,32,0.268,33,0.162,34,0.029,35,0.649,36,1.176,37,1.085,38,0.762,39,1.617,40,0.762,41,0.619,42,0.762,43,0.552,44,0.762,45,0.552,46,0.762,47,0.509,48,0.649,49,1.176,50,0.995,51,0.762,52,0.509,53,0.649,54,0.552,55,0.762,56,0.552,57,0.762,58,0.552,59,0.762,60,0.509,61,1.224,62,0.762,63,0.762,64,0.01,65,0.015,66,0.01,67,1.311,72,0.557,75,0.724,81,0.469,82,0.469,83,3.424,84,0.43,95,1.044,101,1.085,102,1.072,103,0.507,158,2.229,176,1.311,177,1.181,179,2.937,190,0.966,206,1.13,216,1.438,220,1.224,223,0.762,249,1.072,256,1.474,292,1.326,302,1.657,318,2.025,327,2.276,366,0.98,367,1.513,370,2.937,371,1.776,374,1.377,375,1.748,376,0.826,379,2.712,381,1.908,382,1.388,394,2.08,398,1.474,399,4.633,400,1.692,401,2.613,402,3.193,403,2.613,404,3.193,405,3.592,406,3.18,407,2.613,408,2.613,409,2.782,410,2.025,411,2.613,412,3.382,413,2.613,414,2.782,415,2.025,416,2.276,417,1.824,418,2.276,419,2.276,420,2.613,421,2.613,422,2.613,423,2.783,424,2.276,425,2.782,426,2.782,427,2.276,428,2.613,429,1.692,430,1.474,431,1.692,432,1.311,433,1.692,434,1.181,435,1.692,436,1.692,437,1.692,445,2.023,446,3.125,447,2.023,448,2.023,449,2.023,450,2.023,451,2.023,452,1.692,453,1.474,454,2.023,455,2.782,456,1.181,457,1.474,458,1.692,459,1.692,460,1.474,461,1.474,462,1.474,463,1.181,464,1.692]],["title/injectables/LoginService.html",[95,0.68,379,1.694]],["body/injectables/LoginService.html",[3,0.443,4,0.25,9,0.213,14,1.179,19,0.289,20,0.697,22,0.516,23,0.032,24,0.942,29,0.721,31,0.601,32,0.414,33,0.25,34,0.045,41,0.697,64,0.015,65,0.02,66,0.015,72,0.766,75,0.996,81,0.996,82,0.996,84,0.915,85,2.379,94,1.391,95,0.915,97,1.391,98,2.281,99,2.281,100,1.391,103,0.508,106,1.391,179,2.28,190,1.02,191,2.182,220,1.696,240,1.391,260,1.516,267,1.827,268,2.804,273,2.28,292,1.706,331,3.133,366,1.516,367,2.561,369,2.281,370,2.604,371,1.575,372,2.618,373,2.618,374,1.696,375,2.087,376,1.279,377,3.597,378,3.597,379,2.28,380,4.108,381,2.349,382,1.91,383,3.597,384,4.423,385,2.618,386,2.618,387,3.597,388,3.597,389,3.597,390,3.597,391,3.597,392,3.597,393,3.597,394,2.083,395,3.597,396,2.618,465,4.3,466,3.131]],["title/components/MainPageComponent.html",[0,0.378,52,0.804]],["body/components/MainPageComponent.html",[0,0.5,1,0.653,2,1.231,3,0.191,4,0.191,5,0.9,6,0.9,7,0.9,8,0.9,9,0.162,11,0.9,12,2.063,13,1.904,15,1.231,17,1.231,19,0.327,20,0.575,22,0.444,23,0.032,24,0.632,25,2.467,26,1.395,29,0.687,31,0.491,32,0.316,33,0.191,34,0.035,35,0.766,36,1.335,37,1.231,38,0.9,39,1.761,40,0.9,41,0.963,42,0.9,43,0.653,44,0.9,45,0.653,46,0.9,47,0.601,48,0.766,49,1.335,50,0.554,51,0.9,52,1.177,53,1.784,54,0.653,55,0.9,56,0.653,57,0.9,58,0.653,59,0.9,60,0.601,61,0.766,62,0.9,63,0.9,64,0.011,65,0.017,66,0.011,72,0.632,75,0.821,81,0.554,82,0.554,84,0.509,101,1.231,103,0.575,146,3.237,171,1.548,179,1.88,188,1.97,190,0.833,206,1.049,216,1.591,220,1.137,223,1.761,249,1.267,274,2.265,288,2.069,292,1.231,303,3.535,306,2.774,311,2.583,313,1.741,314,1.741,316,1.741,318,3.03,322,3.535,323,2.965,374,1.499,375,1.88,376,0.976,381,1.878,382,2.077,394,1.717,414,2.583,432,2.297,453,1.741,455,3.079,456,1.395,457,1.741,460,1.741,461,1.741,462,2.583,463,2.069,467,4.177,468,3.545,469,3.545,470,2.965,471,2.39,472,2.949,473,3.545,474,2.39,475,3.407,476,3.545,477,2.39,478,1.741,479,1.999,480,2.39,481,2.39,482,2.39,483,2.39,484,2.39,485,2.39,486,1.999,487,2.39,488,1.999,489,1.741,490,2.39,491,2.39,492,2.39,493,2.39,494,1.999,495,3.545,496,2.39,497,2.39]],["title/classes/Post.html",[34,0.046,188,1.203]],["body/classes/Post.html",[3,0.308,4,0.308,9,0.262,19,0.355,20,0.801,22,0.657,23,0.031,24,1.082,29,0.919,33,0.308,34,0.056,41,0.931,64,0.018,65,0.023,66,0.018,72,0.687,81,0.893,82,0.893,103,0.625,160,2.044,184,2.251,185,2.251,186,2.888,187,2.638,188,2.051,196,2.056,197,2.639,219,3.53,371,1.747,498,3.225,499,3.969,500,4.13,501,3.856,502,3.856,503,3.856,504,3.856,505,3.856,506,3.856,507,3.856,508,3.856,509,3.225]],["title/components/PostComponent.html",[0,0.378,54,0.873]],["body/components/PostComponent.html",[0,0.428,1,0.507,2,1.015,3,0.148,4,0.148,5,0.699,6,0.699,7,0.699,8,0.699,9,0.126,11,0.699,12,1.947,13,1.797,15,1.015,17,1.015,19,0.171,20,0.474,22,0.497,23,0.032,24,0.794,29,0.776,31,0.497,32,0.246,33,0.148,34,0.027,35,0.595,36,1.1,37,1.015,38,0.699,39,1.544,40,0.699,41,0.665,42,0.699,43,0.507,44,0.699,45,0.507,46,0.699,47,0.467,48,0.595,49,1.1,50,0.43,51,0.699,52,0.467,53,0.595,54,1.12,55,0.699,56,0.507,57,0.699,58,0.507,59,0.699,60,0.467,61,0.595,62,0.699,63,0.699,64,0.009,65,0.014,66,0.009,72,0.644,75,0.677,81,0.677,82,0.677,84,0.873,101,1.015,103,0.474,171,1.203,177,1.084,182,2.715,186,2.174,187,2.281,188,2.264,190,0.915,191,1.606,195,2.603,196,1.646,197,2.487,206,1.52,211,0.825,216,1.361,219,3.069,220,1.518,221,2.129,223,1.544,224,2.129,225,1.553,226,2.893,229,2.444,235,2.129,239,1.553,243,1.553,244,1.553,245,1.553,274,2.294,278,1.894,279,2.129,292,1.645,302,1.916,306,1.55,371,0.595,374,1.315,375,1.866,376,0.758,381,1.821,382,2.402,394,1.415,406,1.894,415,1.894,416,2.987,417,2.393,418,2.987,419,2.987,434,1.084,456,1.084,463,1.084,470,2.444,472,2.174,475,2.129,478,1.352,489,1.352,499,2.987,510,1.553,511,2.923,512,3.615,513,2.923,514,3.615,515,3.615,516,4.1,517,2.923,518,1.857,519,1.857,520,2.923,521,2.444,522,2.923,523,2.923,524,2.923,525,1.857,526,2.923,527,1.857,528,1.857,529,2.444,530,1.857,531,2.923,532,2.444,533,1.857,534,2.444,535,1.857,536,1.857,537,1.857,538,2.923,539,1.857,540,2.923,541,1.857,542,2.923,543,2.923,544,2.923,545,2.923,546,2.923,547,1.553,548,1.553,549,1.553,550,1.553]],["title/injectables/PostService.html",[95,0.68,472,1.694]],["body/injectables/PostService.html",[3,0.207,4,0.207,9,0.176,14,0.975,19,0.239,20,0.61,22,0.51,23,0.032,24,0.919,29,0.758,31,0.542,32,0.343,33,0.207,34,0.037,41,0.718,64,0.012,65,0.018,66,0.012,72,0.866,75,0.871,81,1.026,82,1.026,84,1.254,85,2.974,94,1.15,95,0.8,97,1.15,100,1.15,103,0.42,106,2.159,186,2.855,187,1.671,188,2.343,190,0.789,195,2.195,196,1.655,197,1.254,211,1.15,220,1.558,240,1.15,260,1.254,262,2.437,263,3.149,267,1.512,268,2.577,271,3.76,273,2.736,274,2.354,275,2.74,278,2.437,279,2.74,288,2.195,292,1.688,306,2.855,340,2.74,374,1.558,375,1.83,376,1.058,381,2.159,417,3.143,432,1.678,434,1.512,472,1.994,499,3.541,521,3.145,551,2.166,552,4.86,553,3.761,554,2.59,555,4.86,556,5.384,557,3.761,558,2.59,559,3.145,560,3.761,561,2.59,562,3.761,563,3.761,564,2.59,565,2.59,566,2.59,567,2.59,568,2.59,569,2.59,570,2.59,571,2.166]],["title/components/PosterComponent.html",[0,0.378,56,0.873]],["body/components/PosterComponent.html",[0,0.652,1,0.688,2,1.281,3,0.201,4,0.201,5,0.949,6,0.949,7,0.949,8,0.949,9,0.171,11,0.949,12,2.085,13,1.925,15,1.281,17,1.281,19,0.232,20,0.598,22,0.458,23,0.032,24,0.657,29,0.75,31,0.458,32,0.333,33,0.201,34,0.036,35,0.808,36,1.388,37,1.281,38,1.642,39,1.807,40,0.949,41,0.707,42,0.949,43,0.688,44,0.949,45,0.688,46,0.949,47,0.635,48,0.808,49,1.388,50,0.584,51,0.949,52,0.635,53,0.808,54,0.688,55,0.949,56,1.31,57,0.949,58,0.688,59,0.949,60,0.635,61,0.808,62,0.949,63,0.949,64,0.012,65,0.018,66,0.012,72,0.657,75,0.854,81,0.584,82,0.584,84,0.785,101,1.281,103,0.598,171,1.634,186,2.707,188,2.26,190,1.043,206,1.42,209,2.108,211,1.638,216,1.642,220,1.182,223,1.807,274,2.324,292,1.281,302,1.336,306,1.955,308,1.634,309,2.108,310,2.108,311,1.837,312,2.108,313,1.837,314,1.837,371,0.808,374,1.538,375,0.949,376,1.03,382,2.131,406,3.109,415,2.39,423,3.109,463,1.471,472,2.544,478,1.837,489,1.837,547,2.108,548,2.108,549,2.108,550,2.108,572,2.108,573,3.084,574,3.688,575,4.361,576,3.688,577,4.361,578,2.521,579,3.688,580,4.361,581,2.521,582,3.084,583,3.688,584,2.521,585,2.521,586,3.688,587,3.688,588,3.084,589,3.688,590,3.688,591,2.521,592,2.521,593,2.521]],["title/components/ProfileComponent.html",[0,0.378,58,0.873]],["body/components/ProfileComponent.html",[0,0.549,1,0.769,2,1.387,3,0.225,4,0.225,5,1.06,6,1.06,7,1.06,8,1.06,9,0.191,11,1.06,12,2.13,13,1.966,15,1.387,17,1.387,19,0.26,20,0.648,22,0.56,23,0.032,24,0.712,29,0.813,31,0.487,32,0.373,33,0.225,34,0.041,35,0.903,36,1.504,37,1.387,38,1.06,39,1.901,40,1.06,41,0.819,42,1.06,43,0.769,44,1.06,45,0.769,46,1.06,47,0.709,48,0.903,49,1.504,50,0.652,51,1.06,52,0.709,53,0.903,54,0.769,55,1.06,56,0.769,57,1.06,58,1.379,59,1.06,60,0.709,61,0.903,62,1.06,63,1.06,64,0.013,65,0.019,66,0.013,75,0.925,81,0.925,82,0.925,84,0.85,101,1.387,103,0.648,191,2.46,196,1.826,197,2.446,206,1.495,216,1.747,220,1.281,223,1.901,249,1.493,338,3.589,341,3.34,345,3.34,349,3.34,371,1.488,374,1.619,375,1.06,376,1.151,381,2.062,424,2.052,430,2.052,434,1.644,479,2.355,534,2.355,559,3.34,594,2.355,595,3.994,596,4.641,597,3.994,598,5.332,599,2.816,600,2.816,601,2.816,602,2.816,603,2.816,604,2.816,605,2.816,606,2.816,607,2.816,608,2.816,609,2.816,610,2.816]],["title/components/SignupComponent.html",[0,0.378,60,0.804]],["body/components/SignupComponent.html",[0,0.516,1,0.484,2,0.979,3,0.28,4,0.142,5,0.668,6,0.668,7,0.668,8,0.668,9,0.121,11,0.668,12,1.924,13,1.776,15,0.979,17,0.979,19,0.164,20,0.457,22,0.547,23,0.032,24,0.777,25,1.646,26,1.646,29,0.814,31,0.368,32,0.235,33,0.142,34,0.026,35,0.569,36,1.061,37,0.979,38,0.668,39,1.505,40,0.668,41,0.789,42,0.668,43,0.484,44,0.668,45,0.484,46,0.668,47,0.446,48,0.569,49,1.061,50,0.411,51,0.668,52,0.446,53,0.569,54,0.484,55,0.668,56,0.484,57,0.668,58,0.484,59,0.668,60,1.006,61,1.561,62,0.668,63,0.668,64,0.008,65,0.013,66,0.008,72,0.502,75,0.653,81,0.813,82,0.813,83,3.155,84,0.851,101,0.979,102,0.94,103,0.288,158,2.333,190,1.101,196,0.904,202,2.934,206,1.541,211,0.788,213,1.484,216,1.321,223,0.668,240,0.788,249,1.495,256,1.292,274,1.365,280,1.827,292,0.616,302,1.86,308,1.149,370,2.76,371,1.125,382,1.252,409,2.556,410,2.274,412,3.178,423,3.274,425,3.178,426,2.912,427,2.556,452,1.484,453,2.054,455,2.556,456,1.035,457,1.292,458,2.358,459,1.484,460,1.292,461,1.292,462,1.292,463,1.035,464,1.484,494,1.484,529,3.343,571,3.343,573,2.358,582,2.358,588,2.358,611,1.484,612,3.509,613,2.819,614,4.362,615,3.509,616,3.509,617,3.509,618,2.934,619,2.819,620,4.362,621,1.774,622,3.155,623,2.819,624,2.819,625,1.774,626,2.819,627,1.774,628,1.774,629,1.774,630,1.774,631,2.819,632,3.997,633,1.774,634,1.774,635,2.819,636,1.774,637,2.819,638,2.819,639,2.819,640,2.819,641,1.774,642,1.774,643,1.774,644,3.509,645,3.509,646,1.774,647,1.774,648,1.774,649,2.819,650,3.509,651,3.509,652,1.774,653,2.274,654,1.774,655,1.774,656,1.774,657,1.774,658,3.509,659,1.774,660,1.774,661,1.774,662,1.774,663,1.774,664,3.509,665,1.774,666,1.774,667,1.774,668,1.484,669,1.774,670,2.819,671,2.819,672,2.358,673,1.774,674,1.774,675,1.484,676,1.774,677,1.774,678,1.774]],["title/injectables/SignupService.html",[95,0.68,622,2.071]],["body/injectables/SignupService.html",[3,0.191,4,0.191,9,0.163,14,0.901,19,0.221,20,0.575,22,0.569,23,0.032,24,1.058,29,0.796,31,0.491,32,0.317,33,0.191,34,0.035,41,0.759,61,1.138,64,0.011,65,0.017,66,0.011,72,0.89,75,0.822,81,1.084,82,1.084,84,1.264,85,2.907,94,1.063,95,0.755,97,1.063,100,1.063,103,0.388,106,1.879,190,1.147,191,2.525,220,1.823,240,1.063,260,1.159,262,2.3,263,2.3,267,1.397,268,2.481,270,2.969,271,3.814,273,2.65,274,1.719,275,2.586,278,2.3,281,2.969,290,2.969,291,2.969,292,1.625,340,2.586,371,1.823,417,3.056,475,3.409,618,2.969,622,2.3,653,3.684,668,2.969,679,2.002,680,4.231,681,4.231,682,4.231,683,3.55,684,3.55,685,3.55,686,3.55,687,2.393,688,3.55,689,5.235,690,3.55,691,2.393,692,4.68,693,4.68,694,4.68,695,3.55,696,2.393,697,2.393,698,2.393,699,3.55,700,2.393,701,2.393,702,2.393,703,2.393,704,2.393,705,2.393,706,2.393,707,2.393,708,2.393]],["title/classes/User.html",[34,0.046,190,0.569]],["body/classes/User.html",[3,0.307,4,0.307,9,0.261,19,0.355,20,0.799,22,0.656,23,0.031,24,1.148,29,0.918,33,0.307,34,0.056,41,0.93,64,0.018,65,0.023,66,0.018,72,0.685,81,0.891,82,0.891,103,0.624,160,2.039,184,2.245,185,2.245,187,2.636,190,0.969,196,1.903,370,2.885,371,1.745,500,4.123,509,3.217,653,3.526,672,4.551,709,3.217,710,5.442,711,3.846,712,3.846,713,3.846,714,3.846,715,3.846,716,3.846,717,3.846,718,3.846,719,3.846]],["title/coverage.html",[720,3.647]],["body/coverage.html",[0,0.728,1,0.869,9,0.216,10,2.662,22,0.334,23,0.031,34,0.081,43,0.869,45,0.869,47,0.801,50,0.737,52,0.801,54,0.869,56,0.869,58,0.869,60,0.801,64,0.015,65,0.021,66,0.015,67,2.063,68,1.858,70,2.319,71,2.662,95,1.225,146,2.063,151,2.063,159,2.319,161,2.662,182,1.542,183,2.662,188,1.198,190,0.567,211,1.414,215,2.662,226,1.858,261,2.662,299,2.662,308,2.063,315,2.662,316,3.169,332,1.858,333,2.662,338,2.063,339,2.662,366,2.107,367,2.107,369,3.169,374,1.021,379,1.688,398,3.169,438,2.662,439,2.662,456,3.592,467,2.662,472,1.688,486,4.454,498,2.662,510,2.662,551,2.662,572,2.662,594,2.662,611,2.662,622,2.063,675,2.662,679,2.662,709,2.662,720,2.662,721,3.183,722,3.183,723,3.183,724,4.955,725,3.183,726,3.183,727,3.183,728,3.183,729,4.955,730,4.955,731,3.183,732,3.183,733,3.183,734,3.183,735,3.183,736,3.183,737,3.183,738,3.183,739,3.183,740,3.183,741,3.183,742,3.183,743,3.183,744,3.183,745,4.35,746,4.35,747,3.183,748,3.183,749,3.183,750,3.183,751,3.183,752,3.183,753,2.662,754,5.326,755,3.638,756,5.326,757,2.662,758,3.638,759,2.662,760,2.662,761,3.183]],["title/dependencies.html",[112,2.49,762,2.669]],["body/dependencies.html",[23,0.032,32,0.588,64,0.021,65,0.026,66,0.021,97,1.974,112,2.88,114,3.497,130,3.717,132,4.513,133,3.497,135,3.717,141,3.717,142,3.717,176,2.88,763,4.445,764,6.474,765,4.445,766,4.445,767,4.445,768,4.445,769,4.445,770,4.445,771,4.445,772,4.445,773,4.445,774,4.445]],["title/index.html",[19,0.246,775,2.669,776,2.669]],["body/index.html",[23,0.025,27,3.492,64,0.02,65,0.025,66,0.02,72,0.744,114,2.705,179,2.753,182,2.022,190,0.744,211,2.627,288,2.437,306,2.996,327,3.783,330,3.492,332,3.031,394,3.168,532,3.492,653,2.705,777,4.175,778,4.175,779,4.175,780,4.175,781,4.175,782,4.175,783,4.175,784,5.652,785,5.652,786,4.175,787,5.913,788,4.175,789,4.175,790,4.175,791,4.175,792,4.175,793,4.175,794,4.175,795,4.175,796,4.175,797,4.175,798,4.175,799,4.175,800,4.175,801,4.175,802,4.175,803,4.175,804,4.175]],["title/modules.html",[111,2.546]],["body/modules.html",[23,0.027,64,0.024,65,0.027,66,0.024,110,3.241,111,2.92,122,2.92,133,3.241,805,5.002,806,5.002,807,5.788,808,5.002,809,5.002]],["title/overview.html",[810,3.647]],["body/overview.html",[1,1.678,2,1.309,23,0.031,35,1.209,43,1.472,45,1.472,47,1.357,50,1.249,52,1.357,54,1.472,56,1.472,58,1.472,60,1.357,64,0.018,65,0.023,66,0.018,68,3.146,109,2.443,110,4.318,111,2.2,112,2.443,113,3.153,114,2.443,115,3.153,116,2.746,117,3.153,118,3.153,119,3.153,120,3.153,121,3.153,122,3.146,123,4.07,124,3.153,125,3.153,160,1.999,175,2.443,260,1.826,368,2.746,488,3.153,810,3.153,811,4.867,812,3.77,813,3.77,814,3.77]],["title/routes.html",[175,2.826]],["body/routes.html",[23,0.028,64,0.024,65,0.028,66,0.024,175,3.341]],["title/miscellaneous/variables.html",[272,2.8,815,2.232]],["body/miscellaneous/variables.html",[19,0.41,22,0.634,23,0.031,25,3.392,26,3.392,64,0.021,65,0.026,66,0.021,158,3.15,272,3.238,280,3.497,410,2.88,753,3.717,755,5.054,757,3.717,758,3.717,759,4.513,760,4.513,815,3.717,816,5.396,817,4.445,818,4.445,819,4.445,820,4.445,821,4.445,822,5.396]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppInterceptorService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"classes/Follow.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":456,"title":{},"body":{"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["0.11.3",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":397,"title":{"interfaces/IUser-1.html":{}},"body":{}}],["1/1",{"_index":733,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":739,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":488,"title":{},"body":{"components/MainPageComponent.html":{},"overview.html":{}}}],["100",{"_index":486,"title":{},"body":{"components/MainPageComponent.html":{},"coverage.html":{}}}],["10px",{"_index":461,"title":{},"body":{"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/SignupComponent.html":{}}}],["10rem",{"_index":495,"title":{},"body":{"components/MainPageComponent.html":{}}}],["11",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["11.2.13",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["12pt",{"_index":259,"title":{},"body":{"components/CommentComponent.html":{}}}],["16",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["1px",{"_index":312,"title":{},"body":{"components/FeedComponent.html":{},"components/PosterComponent.html":{}}}],["2",{"_index":811,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":740,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":256,"title":{},"body":{"components/CommentComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["20rem",{"_index":454,"title":{},"body":{"components/LoginComponent.html":{}}}],["25",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":814,"title":{},"body":{"overview.html":{}}}],["4.6.0",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":744,"title":{},"body":{"coverage.html":{}}}],["40rem",{"_index":673,"title":{},"body":{"components/SignupComponent.html":{}}}],["5",{"_index":813,"title":{},"body":{"overview.html":{}}}],["5/6",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":675,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["5px",{"_index":550,"title":{},"body":{"components/PostComponent.html":{},"components/PosterComponent.html":{}}}],["5rem",{"_index":493,"title":{},"body":{"components/MainPageComponent.html":{}}}],["6",{"_index":812,"title":{},"body":{"overview.html":{}}}],["6.6.0",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["61",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":742,"title":{},"body":{"coverage.html":{}}}],["8/13",{"_index":752,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":743,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":745,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":741,"title":{},"body":{"coverage.html":{}}}],["9.1.1",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["9/10",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["account",{"_index":785,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["add",{"_index":281,"title":{},"body":{"injectables/CommentService.html":{},"injectables/SignupService.html":{}}}],["addcomment",{"_index":221,"title":{},"body":{"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/PostComponent.html":{}}}],["addcomment(body",{"_index":229,"title":{},"body":{"components/CommentComponent.html":{},"components/PostComponent.html":{}}}],["addcomment(comment",{"_index":276,"title":{},"body":{"injectables/CommentService.html":{}}}],["addcommentinput",{"_index":254,"title":{},"body":{"components/CommentComponent.html":{}}}],["added",{"_index":688,"title":{},"body":{"injectables/SignupService.html":{}}}],["adding",{"_index":290,"title":{},"body":{"injectables/CommentService.html":{},"injectables/SignupService.html":{}}}],["adds",{"_index":278,"title":{},"body":{"injectables/CommentService.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"injectables/SignupService.html":{}}}],["adduser",{"_index":683,"title":{},"body":{"injectables/SignupService.html":{}}}],["adduser(user",{"_index":686,"title":{},"body":{"injectables/SignupService.html":{}}}],["alert('email",{"_index":652,"title":{},"body":{"components/SignupComponent.html":{}}}],["alert('there",{"_index":568,"title":{},"body":{"injectables/PostService.html":{}}}],["alert('user",{"_index":647,"title":{},"body":{"components/SignupComponent.html":{}}}],["alert('username",{"_index":649,"title":{},"body":{"components/SignupComponent.html":{}}}],["already",{"_index":650,"title":{},"body":{"components/SignupComponent.html":{}}}],["angular",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":94,"title":{},"body":{"interceptors/AppInterceptorService.html":{},"modules/AppModule.html":{},"injectables/CommentService.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"injectables/LoginService.html":{},"injectables/PostService.html":{},"injectables/SignupService.html":{}}}],["angular/compiler",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppInterceptorService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["api",{"_index":340,"title":{},"body":{"injectables/FollowService.html":{},"injectables/PostService.html":{},"injectables/SignupService.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["app.component",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appinterceptorservice",{"_index":68,"title":{"interceptors/AppInterceptorService.html":{}},"body":{"interceptors/AppInterceptorService.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":110,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":159,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":122,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":162,"title":{},"body":{"classes/AppPage.html":{}}}],["attempts",{"_index":387,"title":{},"body":{"interfaces/IUser.html":{},"injectables/LoginService.html":{}}}],["attribute",{"_index":524,"title":{},"body":{"components/PostComponent.html":{}}}],["authentication",{"_index":800,"title":{},"body":{"index.html":{}}}],["auto",{"_index":457,"title":{},"body":{"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/SignupComponent.html":{}}}],["available",{"_index":809,"title":{},"body":{"modules.html":{}}}],["backend",{"_index":393,"title":{},"body":{"interfaces/IUser.html":{},"injectables/LoginService.html":{}}}],["background",{"_index":491,"title":{},"body":{"components/MainPageComponent.html":{}}}],["birth",{"_index":664,"title":{},"body":{"components/SignupComponent.html":{}}}],["black",{"_index":314,"title":{},"body":{"components/FeedComponent.html":{},"components/MainPageComponent.html":{},"components/PosterComponent.html":{}}}],["block",{"_index":639,"title":{},"body":{"components/SignupComponent.html":{}}}],["body",{"_index":186,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{}}}],["boolean",{"_index":415,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{}}}],["boot",{"_index":791,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":311,"title":{},"body":{"components/FeedComponent.html":{},"components/MainPageComponent.html":{},"components/PosterComponent.html":{}}}],["both",{"_index":678,"title":{},"body":{"components/SignupComponent.html":{}}}],["bottom",{"_index":460,"title":{},"body":{"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/SignupComponent.html":{}}}],["browse",{"_index":807,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":169,"title":{},"body":{"classes/AppPage.html":{}}}],["browsermodule",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":418,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{}}}],["called",{"_index":786,"title":{},"body":{"index.html":{}}}],["calls",{"_index":263,"title":{},"body":{"injectables/CommentService.html":{},"injectables/FollowService.html":{},"injectables/PostService.html":{},"injectables/SignupService.html":{}}}],["card",{"_index":452,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["catcherror",{"_index":98,"title":{},"body":{"interceptors/AppInterceptorService.html":{},"interfaces/IUser.html":{},"injectables/LoginService.html":{}}}],["checked",{"_index":392,"title":{},"body":{"interfaces/IUser.html":{},"injectables/LoginService.html":{}}}],["class",{"_index":34,"title":{"classes/AppPage.html":{},"classes/Comment.html":{},"classes/Follow.html":{},"classes/Post.html":{},"classes/User.html":{}},"body":{"components/AppComponent.html":{},"interceptors/AppInterceptorService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"classes/Follow.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{},"coverage.html":{}}}],["classes",{"_index":160,"title":{},"body":{"classes/AppPage.html":{},"classes/Comment.html":{},"classes/Follow.html":{},"classes/Post.html":{},"classes/User.html":{},"overview.html":{}}}],["clear",{"_index":677,"title":{},"body":{"components/SignupComponent.html":{}}}],["client",{"_index":275,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostService.html":{},"injectables/SignupService.html":{}}}],["clone",{"_index":783,"title":{},"body":{"index.html":{}}}],["close",{"_index":546,"title":{},"body":{"components/PostComponent.html":{}}}],["cluster_appmodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["color",{"_index":463,"title":{},"body":{"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/SignupComponent.html":{}}}],["column",{"_index":674,"title":{},"body":{"components/SignupComponent.html":{}}}],["comment",{"_index":182,"title":{"classes/Comment.html":{}},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/PostComponent.html":{},"coverage.html":{},"index.html":{}}}],["comment'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["comment(body",{"_index":244,"title":{},"body":{"components/CommentComponent.html":{},"components/PostComponent.html":{}}}],["comment.body",{"_index":253,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.component.css",{"_index":217,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.component.html",{"_index":218,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.service",{"_index":239,"title":{},"body":{"components/CommentComponent.html":{},"components/PostComponent.html":{}}}],["comment/comment.component",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["comment[\"post\"].name",{"_index":251,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment[\"post\"][\"user\"][\"username",{"_index":252,"title":{},"body":{"components/CommentComponent.html":{}}}],["commentbody",{"_index":514,"title":{},"body":{"components/PostComponent.html":{}}}],["commentbtn",{"_index":516,"title":{},"body":{"components/PostComponent.html":{}}}],["commentcomponent",{"_index":43,"title":{"components/CommentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["comments",{"_index":219,"title":{},"body":{"components/CommentComponent.html":{},"injectables/CommentService.html":{},"classes/Post.html":{},"components/PostComponent.html":{}}}],["commentservice",{"_index":226,"title":{"injectables/CommentService.html":{}},"body":{"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/PostComponent.html":{},"coverage.html":{}}}],["commonmodule",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["completion",{"_index":556,"title":{},"body":{"injectables/PostService.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["confirm",{"_index":671,"title":{},"body":{"components/SignupComponent.html":{}}}],["conformation",{"_index":637,"title":{},"body":{"components/SignupComponent.html":{}}}],["console.log('error",{"_index":104,"title":{},"body":{"interceptors/AppInterceptorService.html":{}}}],["console.log(`error",{"_index":437,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{}}}],["console.log(this.comments",{"_index":250,"title":{},"body":{"components/CommentComponent.html":{}}}],["console.log(this.postid",{"_index":241,"title":{},"body":{"components/CommentComponent.html":{}}}],["const",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{}}}],["constructor",{"_index":103,"title":{},"body":{"interceptors/AppInterceptorService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"injectables/FollowService.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{}}}],["constructor(body",{"_index":194,"title":{},"body":{"classes/Comment.html":{}}}],["constructor(commentservice",{"_index":225,"title":{},"body":{"components/CommentComponent.html":{},"components/PostComponent.html":{}}}],["constructor(followservice",{"_index":599,"title":{},"body":{"components/ProfileComponent.html":{}}}],["constructor(http",{"_index":267,"title":{},"body":{"injectables/CommentService.html":{},"injectables/FollowService.html":{},"injectables/LoginService.html":{},"injectables/PostService.html":{},"injectables/SignupService.html":{}}}],["constructor(id",{"_index":500,"title":{},"body":{"classes/Post.html":{},"classes/User.html":{}}}],["constructor(loggeduser",{"_index":471,"title":{},"body":{"components/MainPageComponent.html":{}}}],["constructor(loginservice",{"_index":445,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(private",{"_index":240,"title":{},"body":{"components/CommentComponent.html":{},"injectables/CommentService.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"injectables/LoginService.html":{},"injectables/PostService.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{}}}],["constructor(signupservice",{"_index":621,"title":{},"body":{"components/SignupComponent.html":{}}}],["constructor(thingthatposts",{"_index":578,"title":{},"body":{"components/PosterComponent.html":{}}}],["content",{"_index":171,"title":{},"body":{"classes/AppPage.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{}}}],["context",{"_index":759,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cool",{"_index":317,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["coverage",{"_index":720,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":784,"title":{},"body":{"index.html":{}}}],["created",{"_index":648,"title":{},"body":{"components/SignupComponent.html":{}}}],["createing",{"_index":573,"title":{},"body":{"components/PosterComponent.html":{},"components/SignupComponent.html":{}}}],["creates",{"_index":526,"title":{},"body":{"components/PostComponent.html":{}}}],["credentials",{"_index":389,"title":{},"body":{"interfaces/IUser.html":{},"injectables/LoginService.html":{}}}],["current",{"_index":520,"title":{},"body":{"components/PostComponent.html":{}}}],["data",{"_index":185,"title":{},"body":{"classes/Comment.html":{},"classes/Follow.html":{},"injectables/LoggedUserService.html":{},"classes/Post.html":{},"classes/User.html":{}}}],["database",{"_index":279,"title":{},"body":{"injectables/CommentService.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{}}}],["date",{"_index":202,"title":{},"body":{"classes/Comment.html":{},"components/SignupComponent.html":{}}}],["decides",{"_index":587,"title":{},"body":{"components/PosterComponent.html":{}}}],["declarations",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppInterceptorService.html":{},"classes/AppPage.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/FeedComponent.html":{},"classes/Follow.html":{},"injectables/FollowService.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{}}}],["defines",{"_index":401,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{}}}],["delete",{"_index":797,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":112,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derermins",{"_index":420,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{}}}],["description",{"_index":72,"title":{},"body":{"interceptors/AppInterceptorService.html":{},"classes/Comment.html":{},"injectables/CommentService.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"classes/Follow.html":{},"injectables/FollowService.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{},"index.html":{}}}],["designed",{"_index":319,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["determins",{"_index":582,"title":{},"body":{"components/PosterComponent.html":{},"components/SignupComponent.html":{}}}],["direct",{"_index":803,"title":{},"body":{"index.html":{}}}],["directive",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["directives",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["display",{"_index":302,"title":{},"body":{"components/FeedComponent.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/SignupComponent.html":{}}}],["displayed",{"_index":476,"title":{},"body":{"components/MainPageComponent.html":{}}}],["displays",{"_index":470,"title":{},"body":{"components/MainPageComponent.html":{},"components/PostComponent.html":{}}}],["dob",{"_index":710,"title":{},"body":{"classes/User.html":{}}}],["documentation",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["dog",{"_index":780,"title":{},"body":{"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["dynamic",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/app.po.ts",{"_index":161,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":167,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":165,"title":{},"body":{"classes/AppPage.html":{}}}],["edit",{"_index":796,"title":{},"body":{"index.html":{}}}],["elected",{"_index":531,"title":{},"body":{"components/PostComponent.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["element(by.css('app",{"_index":170,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":653,"title":{},"body":{"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{},"index.html":{}}}],["enter",{"_index":670,"title":{},"body":{"components/SignupComponent.html":{}}}],["entered",{"_index":391,"title":{},"body":{"interfaces/IUser.html":{},"injectables/LoginService.html":{}}}],["environment",{"_index":755,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":640,"title":{},"body":{"components/SignupComponent.html":{}}}],["error",{"_index":83,"title":{},"body":{"interceptors/AppInterceptorService.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["errormessage",{"_index":412,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["errorstate",{"_index":409,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["even",{"_index":589,"title":{},"body":{"components/PosterComponent.html":{}}}],["exceptions",{"_index":74,"title":{},"body":{"interceptors/AppInterceptorService.html":{}}}],["exists",{"_index":583,"title":{},"body":{"components/PosterComponent.html":{}}}],["export",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppInterceptorService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"classes/Follow.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{}}}],["exports",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["false",{"_index":410,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["feed",{"_index":303,"title":{},"body":{"components/FeedComponent.html":{},"components/MainPageComponent.html":{}}}],["feed'},{'name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["feed.component.css",{"_index":304,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.html",{"_index":305,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed/feed.component",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["feedcomponent",{"_index":45,"title":{"components/FeedComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fetches",{"_index":475,"title":{},"body":{"components/MainPageComponent.html":{},"components/PostComponent.html":{},"injectables/SignupService.html":{}}}],["fetching",{"_index":699,"title":{},"body":{"injectables/SignupService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppInterceptorService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"classes/Follow.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{},"coverage.html":{}}}],["fill",{"_index":631,"title":{},"body":{"components/SignupComponent.html":{}}}],["finds",{"_index":285,"title":{},"body":{"injectables/CommentService.html":{}}}],["first",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["firstpagecomponent",{"_index":47,"title":{"components/FirstPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fixed",{"_index":485,"title":{},"body":{"components/MainPageComponent.html":{}}}],["float",{"_index":458,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["flow",{"_index":667,"title":{},"body":{"components/SignupComponent.html":{}}}],["follow",{"_index":332,"title":{"classes/Follow.html":{}},"body":{"classes/Follow.html":{},"injectables/FollowService.html":{},"coverage.html":{},"index.html":{}}}],["follow.service",{"_index":606,"title":{},"body":{"components/ProfileComponent.html":{}}}],["follower",{"_index":334,"title":{},"body":{"classes/Follow.html":{},"injectables/FollowService.html":{}}}],["followercount",{"_index":598,"title":{},"body":{"components/ProfileComponent.html":{}}}],["followers",{"_index":341,"title":{},"body":{"injectables/FollowService.html":{},"components/ProfileComponent.html":{}}}],["followservice",{"_index":338,"title":{"injectables/FollowService.html":{}},"body":{"injectables/FollowService.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["font",{"_index":257,"title":{},"body":{"components/CommentComponent.html":{}}}],["formsmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":694,"title":{},"body":{"injectables/SignupService.html":{}}}],["full",{"_index":778,"title":{},"body":{"index.html":{}}}],["getall",{"_index":552,"title":{},"body":{"injectables/PostService.html":{}}}],["getallfollowers",{"_index":345,"title":{},"body":{"injectables/FollowService.html":{},"components/ProfileComponent.html":{}}}],["getallfollowers(userid",{"_index":349,"title":{},"body":{"injectables/FollowService.html":{},"components/ProfileComponent.html":{}}}],["getcommentsbypost",{"_index":222,"title":{},"body":{"components/CommentComponent.html":{},"injectables/CommentService.html":{}}}],["getcommentsbypost(postid",{"_index":231,"title":{},"body":{"components/CommentComponent.html":{},"injectables/CommentService.html":{}}}],["getfollowersbyfollowerid",{"_index":346,"title":{},"body":{"injectables/FollowService.html":{}}}],["getfollowersbyfollowerid(userid",{"_index":351,"title":{},"body":{"injectables/FollowService.html":{}}}],["getting",{"_index":775,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":163,"title":{},"body":{"classes/AppPage.html":{}}}],["getuserbyemail",{"_index":618,"title":{},"body":{"components/SignupComponent.html":{},"injectables/SignupService.html":{}}}],["getuserbyemail(email",{"_index":690,"title":{},"body":{"injectables/SignupService.html":{}}}],["getuserbyemail(user",{"_index":624,"title":{},"body":{"components/SignupComponent.html":{}}}],["getuserbyuserame",{"_index":619,"title":{},"body":{"components/SignupComponent.html":{}}}],["getuserbyuserame(user",{"_index":626,"title":{},"body":{"components/SignupComponent.html":{}}}],["getuserbyusername",{"_index":668,"title":{},"body":{"components/SignupComponent.html":{},"injectables/SignupService.html":{}}}],["getuserbyusername(username",{"_index":695,"title":{},"body":{"injectables/SignupService.html":{}}}],["given",{"_index":408,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{}}}],["grab",{"_index":523,"title":{},"body":{"components/PostComponent.html":{}}}],["graph",{"_index":808,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":549,"title":{},"body":{"components/PostComponent.html":{},"components/PosterComponent.html":{}}}],["h4",{"_index":547,"title":{},"body":{"components/PostComponent.html":{},"components/PosterComponent.html":{}}}],["handleerror",{"_index":76,"title":{},"body":{"interceptors/AppInterceptorService.html":{}}}],["handleerror(error",{"_index":78,"title":{},"body":{"interceptors/AppInterceptorService.html":{}}}],["happening",{"_index":324,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["header",{"_index":483,"title":{},"body":{"components/MainPageComponent.html":{}}}],["height",{"_index":255,"title":{},"body":{"components/CommentComponent.html":{}}}],["holds",{"_index":184,"title":{},"body":{"classes/Comment.html":{},"classes/Follow.html":{},"injectables/LoggedUserService.html":{},"classes/Post.html":{},"classes/User.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["http",{"_index":273,"title":{},"body":{"injectables/CommentService.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"injectables/LoginService.html":{},"injectables/PostService.html":{},"injectables/SignupService.html":{}}}],["http://localhost:9000/comment",{"_index":294,"title":{},"body":{"injectables/CommentService.html":{}}}],["http://localhost:9000/comment/post",{"_index":296,"title":{},"body":{"injectables/CommentService.html":{}}}],["http://localhost:9000/follow",{"_index":358,"title":{},"body":{"injectables/FollowService.html":{}}}],["http://localhost:9000/follow/countbyuser",{"_index":360,"title":{},"body":{"injectables/FollowService.html":{}}}],["http://localhost:9000/follow/follower",{"_index":362,"title":{},"body":{"injectables/FollowService.html":{}}}],["http://localhost:9000/like/${this.loggeduser.id}/${postid",{"_index":570,"title":{},"body":{"injectables/PostService.html":{}}}],["http://localhost:9000/post",{"_index":565,"title":{},"body":{"injectables/PostService.html":{}}}],["http://localhost:9000/user/add",{"_index":701,"title":{},"body":{"injectables/SignupService.html":{}}}],["http://localhost:9000/user/email",{"_index":703,"title":{},"body":{"injectables/SignupService.html":{}}}],["http://localhost:9000/user/login",{"_index":386,"title":{},"body":{"interfaces/IUser.html":{},"injectables/LoginService.html":{}}}],["http://localhost:9000/user/username",{"_index":705,"title":{},"body":{"injectables/SignupService.html":{}}}],["http_interceptors",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":268,"title":{},"body":{"injectables/CommentService.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"injectables/LoginService.html":{},"injectables/PostService.html":{},"injectables/SignupService.html":{}}}],["httpclientmodule",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":79,"title":{},"body":{"interceptors/AppInterceptorService.html":{}}}],["httpevent",{"_index":92,"title":{},"body":{"interceptors/AppInterceptorService.html":{}}}],["httphandler",{"_index":89,"title":{},"body":{"interceptors/AppInterceptorService.html":{}}}],["httpinterceptor",{"_index":93,"title":{},"body":{"interceptors/AppInterceptorService.html":{}}}],["httprequest",{"_index":87,"title":{},"body":{"interceptors/AppInterceptorService.html":{}}}],["id",{"_index":187,"title":{},"body":{"classes/Comment.html":{},"injectables/CommentService.html":{},"classes/Follow.html":{},"injectables/LoggedUserService.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"classes/User.html":{}}}],["identifier",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["idk",{"_index":529,"title":{},"body":{"components/PostComponent.html":{},"components/SignupComponent.html":{}}}],["ignore",{"_index":102,"title":{},"body":{"interceptors/AppInterceptorService.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["implements",{"_index":101,"title":{},"body":{"interceptors/AppInterceptorService.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppInterceptorService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"classes/Follow.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{}}}],["imports",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interceptors/AppInterceptorService.html":{},"classes/AppPage.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/FeedComponent.html":{},"classes/Follow.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppInterceptorService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"classes/Follow.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{}}}],["injectable",{"_index":95,"title":{"injectables/CommentService.html":{},"injectables/FollowService.html":{},"injectables/LoggedUserService.html":{},"injectables/LoginService.html":{},"injectables/PostService.html":{},"injectables/SignupService.html":{}},"body":{"interceptors/AppInterceptorService.html":{},"injectables/CommentService.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/PostService.html":{},"injectables/SignupService.html":{},"coverage.html":{}}}],["injectables",{"_index":260,"title":{},"body":{"injectables/CommentService.html":{},"injectables/FollowService.html":{},"injectables/LoggedUserService.html":{},"injectables/LoginService.html":{},"injectables/PostService.html":{},"injectables/SignupService.html":{},"overview.html":{}}}],["injected",{"_index":274,"title":{},"body":{"injectables/CommentService.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{}}}],["inline",{"_index":548,"title":{},"body":{"components/PostComponent.html":{},"components/PosterComponent.html":{}}}],["input",{"_index":235,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/PostComponent.html":{}}}],["inputed",{"_index":405,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{}}}],["inputs",{"_index":224,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/PostComponent.html":{}}}],["instantiates",{"_index":270,"title":{},"body":{"injectables/CommentService.html":{},"injectables/SignupService.html":{}}}],["intended",{"_index":638,"title":{},"body":{"components/SignupComponent.html":{}}}],["intercept",{"_index":77,"title":{},"body":{"interceptors/AppInterceptorService.html":{}}}],["intercept(req",{"_index":86,"title":{},"body":{"interceptors/AppInterceptorService.html":{}}}],["interceptor",{"_index":67,"title":{"interceptors/AppInterceptorService.html":{}},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["interceptor.service",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.service.ts",{"_index":71,"title":{},"body":{"interceptors/AppInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:24",{"_index":80,"title":{},"body":{"interceptors/AppInterceptorService.html":{}}}],["interceptor.service.ts:29",{"_index":90,"title":{},"body":{"interceptors/AppInterceptorService.html":{}}}],["interceptors",{"_index":69,"title":{},"body":{"interceptors/AppInterceptorService.html":{}}}],["intercepts",{"_index":73,"title":{},"body":{"interceptors/AppInterceptorService.html":{}}}],["interface",{"_index":366,"title":{"interfaces/IUser.html":{},"interfaces/IUser-1.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["interfaces",{"_index":368,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"overview.html":{}}}],["iuser",{"_index":367,"title":{"interfaces/IUser.html":{},"interfaces/IUser-1.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["join",{"_index":326,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["jwt/oauth",{"_index":799,"title":{},"body":{"index.html":{}}}],["left",{"_index":494,"title":{},"body":{"components/MainPageComponent.html":{},"components/SignupComponent.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["like(postid",{"_index":557,"title":{},"body":{"injectables/PostService.html":{}}}],["likes",{"_index":499,"title":{},"body":{"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{}}}],["list",{"_index":288,"title":{},"body":{"injectables/CommentService.html":{},"components/FeedComponent.html":{},"components/MainPageComponent.html":{},"injectables/PostService.html":{},"index.html":{}}}],["literal",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":331,"title":{},"body":{"components/FirstPageComponent.html":{},"interfaces/IUser.html":{},"injectables/LoginService.html":{}}}],["logged",{"_index":375,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{}}}],["loggedin",{"_index":414,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{}}}],["loggeduser",{"_index":381,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/ProfileComponent.html":{}}}],["loggeduserservice",{"_index":374,"title":{"injectables/LoggedUserService.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["logging",{"_index":378,"title":{},"body":{"interfaces/IUser.html":{},"injectables/LoginService.html":{}}}],["login",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"index.html":{}}}],["login'},{'name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["login(user",{"_index":395,"title":{},"body":{"interfaces/IUser.html":{},"injectables/LoginService.html":{}}}],["login.component.css",{"_index":404,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{}}}],["login.component.html",{"_index":403,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{}}}],["login.service",{"_index":400,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{}}}],["login/login.component",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":50,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginservice",{"_index":379,"title":{"injectables/LoginService.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["logout",{"_index":440,"title":{},"body":{"injectables/LoggedUserService.html":{}}}],["look",{"_index":321,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["main",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["mainpage",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mainpagecomponent",{"_index":52,"title":{"components/MainPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["makeing",{"_index":563,"title":{},"body":{"injectables/PostService.html":{}}}],["makes",{"_index":262,"title":{},"body":{"injectables/CommentService.html":{},"injectables/FollowService.html":{},"injectables/PostService.html":{},"injectables/SignupService.html":{}}}],["map",{"_index":372,"title":{},"body":{"interfaces/IUser.html":{},"injectables/LoginService.html":{}}}],["margin",{"_index":455,"title":{},"body":{"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/SignupComponent.html":{}}}],["match",{"_index":661,"title":{},"body":{"components/SignupComponent.html":{}}}],["matching",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppInterceptorService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"classes/Follow.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":411,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{}}}],["message(dm",{"_index":804,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["method",{"_index":666,"title":{},"body":{"components/SignupComponent.html":{}}}],["methods",{"_index":75,"title":{},"body":{"interceptors/AppInterceptorService.html":{},"classes/AppPage.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"injectables/FollowService.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{}}}],["miscellaneous",{"_index":815,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":109,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":111,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["multi",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppInterceptorService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"injectables/FollowService.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{}}}],["navigateto",{"_index":164,"title":{},"body":{"classes/AppPage.html":{}}}],["nbsp",{"_index":541,"title":{},"body":{"components/PostComponent.html":{}}}],["needs",{"_index":407,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{}}}],["new",{"_index":211,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"index.html":{}}}],["newcomment",{"_index":243,"title":{},"body":{"components/CommentComponent.html":{},"components/PostComponent.html":{}}}],["next",{"_index":88,"title":{},"body":{"interceptors/AppInterceptorService.html":{}}}],["next.handle(req).pipe(catcherror(this.handleerror",{"_index":108,"title":{},"body":{"interceptors/AppInterceptorService.html":{}}}],["ng",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngbmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":223,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["none",{"_index":459,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["nothing",{"_index":562,"title":{},"body":{"injectables/PostService.html":{}}}],["now",{"_index":325,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["null",{"_index":571,"title":{},"body":{"injectables/PostService.html":{},"components/SignupComponent.html":{}}}],["num",{"_index":538,"title":{},"body":{"components/PostComponent.html":{}}}],["number",{"_index":196,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"classes/Follow.html":{},"injectables/FollowService.html":{},"injectables/LoggedUserService.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"classes/User.html":{}}}],["object",{"_index":280,"title":{},"body":{"injectables/CommentService.html":{},"classes/Follow.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":301,"title":{},"body":{"components/FeedComponent.html":{}}}],["observable",{"_index":85,"title":{},"body":{"interceptors/AppInterceptorService.html":{},"injectables/CommentService.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"injectables/LoginService.html":{},"injectables/PostService.html":{},"injectables/SignupService.html":{}}}],["occurred",{"_index":105,"title":{},"body":{"interceptors/AppInterceptorService.html":{}}}],["onchanges",{"_index":236,"title":{},"body":{"components/CommentComponent.html":{}}}],["oninit",{"_index":216,"title":{},"body":{"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["optional",{"_index":82,"title":{},"body":{"interceptors/AppInterceptorService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"injectables/FollowService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{}}}],["out",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overflow",{"_index":497,"title":{},"body":{"components/MainPageComponent.html":{}}}],["overview",{"_index":810,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":762,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":489,"title":{},"body":{"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{}}}],["page",{"_index":318,"title":{},"body":{"components/FirstPageComponent.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{}}}],["page'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["page.component",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.css",{"_index":322,"title":{},"body":{"components/FirstPageComponent.html":{},"components/MainPageComponent.html":{}}}],["page.component.html",{"_index":323,"title":{},"body":{"components/FirstPageComponent.html":{},"components/MainPageComponent.html":{}}}],["page.component.ts",{"_index":316,"title":{},"body":{"components/FirstPageComponent.html":{},"components/MainPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:18",{"_index":477,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:23",{"_index":473,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:38",{"_index":474,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page/first",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FirstPageComponent.html":{},"coverage.html":{}}}],["page/main",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MainPageComponent.html":{},"coverage.html":{}}}],["paired",{"_index":586,"title":{},"body":{"components/PosterComponent.html":{}}}],["param",{"_index":292,"title":{},"body":{"injectables/CommentService.html":{},"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{}}}],["parameter",{"_index":522,"title":{},"body":{"components/PostComponent.html":{}}}],["parameters",{"_index":81,"title":{},"body":{"interceptors/AppInterceptorService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"injectables/FollowService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{}}}],["password",{"_index":370,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/SignupComponent.html":{},"classes/User.html":{}}}],["password1",{"_index":614,"title":{},"body":{"components/SignupComponent.html":{}}}],["password2",{"_index":615,"title":{},"body":{"components/SignupComponent.html":{}}}],["passwords",{"_index":660,"title":{},"body":{"components/SignupComponent.html":{}}}],["path",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["phone",{"_index":672,"title":{},"body":{"components/SignupComponent.html":{},"classes/User.html":{}}}],["pomments",{"_index":286,"title":{},"body":{"injectables/CommentService.html":{}}}],["position",{"_index":484,"title":{},"body":{"components/MainPageComponent.html":{}}}],["post",{"_index":188,"title":{"classes/Post.html":{}},"body":{"classes/Comment.html":{},"injectables/CommentService.html":{},"components/FeedComponent.html":{},"components/MainPageComponent.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"coverage.html":{}}}],["post'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["post(body",{"_index":560,"title":{},"body":{"injectables/PostService.html":{}}}],["post(postid",{"_index":212,"title":{},"body":{"classes/Comment.html":{}}}],["post.body",{"_index":543,"title":{},"body":{"components/PostComponent.html":{}}}],["post.component.css",{"_index":512,"title":{},"body":{"components/PostComponent.html":{}}}],["post.component.html",{"_index":513,"title":{},"body":{"components/PostComponent.html":{}}}],["post.likes",{"_index":544,"title":{},"body":{"components/PostComponent.html":{}}}],["post.name",{"_index":540,"title":{},"body":{"components/PostComponent.html":{}}}],["post.service",{"_index":478,"title":{},"body":{"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{}}}],["post.username",{"_index":542,"title":{},"body":{"components/PostComponent.html":{}}}],["post/post.component",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["postcomponent",{"_index":54,"title":{"components/PostComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["poster",{"_index":574,"title":{},"body":{"components/PosterComponent.html":{}}}],["poster'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["poster.component.css",{"_index":575,"title":{},"body":{"components/PosterComponent.html":{}}}],["poster.component.html",{"_index":576,"title":{},"body":{"components/PosterComponent.html":{}}}],["poster/poster.component",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["postercomponent",{"_index":56,"title":{"components/PosterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["postgresfeatures",{"_index":792,"title":{},"body":{"index.html":{}}}],["postid",{"_index":195,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{}}}],["posts",{"_index":306,"title":{},"body":{"components/FeedComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"index.html":{}}}],["posts(woofs",{"_index":794,"title":{},"body":{"index.html":{}}}],["postservice",{"_index":472,"title":{"injectables/PostService.html":{}},"body":{"components/MainPageComponent.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"coverage.html":{}}}],["press",{"_index":419,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{}}}],["private",{"_index":220,"title":{},"body":{"components/CommentComponent.html":{},"injectables/CommentService.html":{},"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"injectables/SignupService.html":{}}}],["production",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":595,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["profile.component.css",{"_index":596,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.html",{"_index":597,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile/profile.component",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecomponent",{"_index":58,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":777,"title":{},"body":{"index.html":{}}}],["promise",{"_index":166,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"classes/Follow.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{}}}],["protractor",{"_index":168,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":100,"title":{},"body":{"interceptors/AppInterceptorService.html":{},"injectables/CommentService.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"injectables/LoggedUserService.html":{},"injectables/LoginService.html":{},"injectables/PostService.html":{},"injectables/SignupService.html":{}}}],["provider",{"_index":377,"title":{},"body":{"interfaces/IUser.html":{},"injectables/LoginService.html":{}}}],["providers",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":191,"title":{},"body":{"classes/Comment.html":{},"injectables/CommentService.html":{},"interfaces/IUser.html":{},"injectables/LoggedUserService.html":{},"injectables/LoginService.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"injectables/SignupService.html":{}}}],["reactiveformsmodule",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["recieved",{"_index":402,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{}}}],["red",{"_index":464,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["register",{"_index":793,"title":{},"body":{"index.html":{}}}],["relevent",{"_index":521,"title":{},"body":{"components/PostComponent.html":{},"injectables/PostService.html":{}}}],["req",{"_index":91,"title":{},"body":{"interceptors/AppInterceptorService.html":{}}}],["request",{"_index":283,"title":{},"body":{"injectables/CommentService.html":{}}}],["require",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":427,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["res",{"_index":249,"title":{},"body":{"components/CommentComponent.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["res.id",{"_index":435,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{}}}],["res.name",{"_index":433,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{}}}],["res.username",{"_index":431,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{}}}],["reset",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolution",{"_index":689,"title":{},"body":{"injectables/SignupService.html":{}}}],["result",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppInterceptorService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"classes/Follow.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppInterceptorService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"classes/Follow.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieves",{"_index":555,"title":{},"body":{"injectables/PostService.html":{}}}],["retrieving",{"_index":291,"title":{},"body":{"injectables/CommentService.html":{},"injectables/SignupService.html":{}}}],["return",{"_index":106,"title":{},"body":{"interceptors/AppInterceptorService.html":{},"classes/AppPage.html":{},"injectables/CommentService.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"injectables/LoginService.html":{},"injectables/PostService.html":{},"injectables/SignupService.html":{}}}],["returns",{"_index":84,"title":{},"body":{"interceptors/AppInterceptorService.html":{},"classes/AppPage.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{}}}],["right",{"_index":496,"title":{},"body":{"components/MainPageComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppInterceptorService.html":{},"classes/AppPage.html":{},"injectables/CommentService.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"injectables/LoggedUserService.html":{},"injectables/LoginService.html":{},"injectables/PostService.html":{},"injectables/SignupService.html":{}}}],["root'},{'name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["routed",{"_index":468,"title":{},"body":{"components/MainPageComponent.html":{}}}],["router",{"_index":399,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{}}}],["routermodule",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":175,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row:after",{"_index":676,"title":{},"body":{"components/SignupComponent.html":{}}}],["runs",{"_index":416,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{}}}],["rxjs",{"_index":97,"title":{},"body":{"interceptors/AppInterceptorService.html":{},"injectables/CommentService.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"injectables/LoginService.html":{},"injectables/PostService.html":{},"injectables/SignupService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":99,"title":{},"body":{"interceptors/AppInterceptorService.html":{},"interfaces/IUser.html":{},"injectables/LoginService.html":{}}}],["save",{"_index":383,"title":{},"body":{"interfaces/IUser.html":{},"injectables/LoginService.html":{}}}],["search",{"_index":693,"title":{},"body":{"injectables/SignupService.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["server",{"_index":264,"title":{},"body":{"injectables/CommentService.html":{}}}],["service",{"_index":382,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/SignupComponent.html":{}}}],["setpost",{"_index":192,"title":{},"body":{"classes/Comment.html":{}}}],["setpost(postid",{"_index":204,"title":{},"body":{"classes/Comment.html":{}}}],["settles",{"_index":282,"title":{},"body":{"injectables/CommentService.html":{}}}],["setuser",{"_index":193,"title":{},"body":{"classes/Comment.html":{}}}],["setuser(userid",{"_index":207,"title":{},"body":{"classes/Comment.html":{}}}],["show",{"_index":545,"title":{},"body":{"components/PostComponent.html":{}}}],["showcomments",{"_index":515,"title":{},"body":{"components/PostComponent.html":{}}}],["shown",{"_index":590,"title":{},"body":{"components/PosterComponent.html":{}}}],["sign",{"_index":329,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["signs",{"_index":802,"title":{},"body":{"index.html":{}}}],["signup",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{}}}],["signup.component.css",{"_index":612,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.html",{"_index":613,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.service",{"_index":643,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.component",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["signupcomponent",{"_index":60,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupservice",{"_index":622,"title":{"injectables/SignupService.html":{}},"body":{"components/SignupComponent.html":{},"injectables/SignupService.html":{},"coverage.html":{}}}],["simplechange",{"_index":237,"title":{},"body":{"components/CommentComponent.html":{}}}],["simplechanges",{"_index":238,"title":{},"body":{"components/CommentComponent.html":{}}}],["single",{"_index":511,"title":{},"body":{"components/PostComponent.html":{}}}],["size",{"_index":258,"title":{},"body":{"components/CommentComponent.html":{}}}],["solid",{"_index":313,"title":{},"body":{"components/FeedComponent.html":{},"components/MainPageComponent.html":{},"components/PosterComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppInterceptorService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"classes/Follow.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{}}}],["span')).gettext",{"_index":172,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":287,"title":{},"body":{"injectables/CommentService.html":{}}}],["specified",{"_index":692,"title":{},"body":{"injectables/SignupService.html":{}}}],["spring",{"_index":790,"title":{},"body":{"index.html":{}}}],["src/.../environment.prod.ts",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":70,"title":{},"body":{"interceptors/AppInterceptorService.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/comment.service.ts",{"_index":261,"title":{},"body":{"injectables/CommentService.html":{},"coverage.html":{}}}],["src/app/comment.service.ts:16",{"_index":289,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/comment.service.ts:20",{"_index":269,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/comment.service.ts:35",{"_index":277,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/comment.service.ts:44",{"_index":284,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/app/comment.ts",{"_index":183,"title":{},"body":{"classes/Comment.html":{},"coverage.html":{}}}],["src/app/comment.ts:10",{"_index":203,"title":{},"body":{"classes/Comment.html":{}}}],["src/app/comment.ts:11",{"_index":201,"title":{},"body":{"classes/Comment.html":{}}}],["src/app/comment.ts:12",{"_index":198,"title":{},"body":{"classes/Comment.html":{}}}],["src/app/comment.ts:20",{"_index":208,"title":{},"body":{"classes/Comment.html":{}}}],["src/app/comment.ts:24",{"_index":205,"title":{},"body":{"classes/Comment.html":{}}}],["src/app/comment.ts:8",{"_index":200,"title":{},"body":{"classes/Comment.html":{}}}],["src/app/comment.ts:9",{"_index":199,"title":{},"body":{"classes/Comment.html":{}}}],["src/app/comment/comment.component.ts",{"_index":215,"title":{},"body":{"components/CommentComponent.html":{},"coverage.html":{}}}],["src/app/comment/comment.component.ts:19",{"_index":234,"title":{},"body":{"components/CommentComponent.html":{}}}],["src/app/comment/comment.component.ts:20",{"_index":228,"title":{},"body":{"components/CommentComponent.html":{}}}],["src/app/comment/comment.component.ts:21",{"_index":227,"title":{},"body":{"components/CommentComponent.html":{}}}],["src/app/comment/comment.component.ts:24",{"_index":233,"title":{},"body":{"components/CommentComponent.html":{}}}],["src/app/comment/comment.component.ts:29",{"_index":230,"title":{},"body":{"components/CommentComponent.html":{}}}],["src/app/comment/comment.component.ts:35",{"_index":232,"title":{},"body":{"components/CommentComponent.html":{}}}],["src/app/feed/feed.component.ts",{"_index":299,"title":{},"body":{"components/FeedComponent.html":{},"coverage.html":{}}}],["src/app/feed/feed.component.ts:16",{"_index":307,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/first",{"_index":315,"title":{},"body":{"components/FirstPageComponent.html":{},"coverage.html":{}}}],["src/app/follow.service.ts",{"_index":339,"title":{},"body":{"injectables/FollowService.html":{},"coverage.html":{}}}],["src/app/follow.service.ts:13",{"_index":355,"title":{},"body":{"injectables/FollowService.html":{}}}],["src/app/follow.service.ts:14",{"_index":356,"title":{},"body":{"injectables/FollowService.html":{}}}],["src/app/follow.service.ts:15",{"_index":348,"title":{},"body":{"injectables/FollowService.html":{}}}],["src/app/follow.service.ts:22",{"_index":350,"title":{},"body":{"injectables/FollowService.html":{}}}],["src/app/follow.service.ts:26",{"_index":352,"title":{},"body":{"injectables/FollowService.html":{}}}],["src/app/follow.service.ts:30",{"_index":354,"title":{},"body":{"injectables/FollowService.html":{}}}],["src/app/follow.ts",{"_index":333,"title":{},"body":{"classes/Follow.html":{},"coverage.html":{}}}],["src/app/follow.ts:7",{"_index":336,"title":{},"body":{"classes/Follow.html":{}}}],["src/app/follow.ts:8",{"_index":335,"title":{},"body":{"classes/Follow.html":{}}}],["src/app/follow.ts:9",{"_index":337,"title":{},"body":{"classes/Follow.html":{}}}],["src/app/logged",{"_index":438,"title":{},"body":{"injectables/LoggedUserService.html":{},"coverage.html":{}}}],["src/app/login.service.ts",{"_index":369,"title":{},"body":{"interfaces/IUser.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/login.service.ts:20",{"_index":465,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:35",{"_index":466,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login/login.component.ts",{"_index":398,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:23",{"_index":451,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":450,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:32",{"_index":449,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:36",{"_index":448,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:41",{"_index":446,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:63",{"_index":447,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/main",{"_index":467,"title":{},"body":{"components/MainPageComponent.html":{},"coverage.html":{}}}],["src/app/post.service.ts",{"_index":551,"title":{},"body":{"injectables/PostService.html":{},"coverage.html":{}}}],["src/app/post.service.ts:17",{"_index":553,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/post.service.ts:30",{"_index":554,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/post.service.ts:39",{"_index":561,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/post.service.ts:56",{"_index":558,"title":{},"body":{"injectables/PostService.html":{}}}],["src/app/post.ts",{"_index":498,"title":{},"body":{"classes/Post.html":{},"coverage.html":{}}}],["src/app/post.ts:10",{"_index":502,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:11",{"_index":505,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:12",{"_index":503,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:13",{"_index":507,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:14",{"_index":504,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:4",{"_index":501,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:8",{"_index":508,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post.ts:9",{"_index":506,"title":{},"body":{"classes/Post.html":{}}}],["src/app/post/post.component.ts",{"_index":510,"title":{},"body":{"components/PostComponent.html":{},"coverage.html":{}}}],["src/app/post/post.component.ts:21",{"_index":518,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:25",{"_index":533,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:29",{"_index":530,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:33",{"_index":517,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:49",{"_index":528,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:56",{"_index":525,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:66",{"_index":519,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/post/post.component.ts:74",{"_index":527,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/poster/poster.component.ts",{"_index":572,"title":{},"body":{"components/PosterComponent.html":{},"coverage.html":{}}}],["src/app/poster/poster.component.ts:17",{"_index":585,"title":{},"body":{"components/PosterComponent.html":{}}}],["src/app/poster/poster.component.ts:22",{"_index":579,"title":{},"body":{"components/PosterComponent.html":{}}}],["src/app/poster/poster.component.ts:36",{"_index":581,"title":{},"body":{"components/PosterComponent.html":{}}}],["src/app/poster/poster.component.ts:43",{"_index":584,"title":{},"body":{"components/PosterComponent.html":{}}}],["src/app/profile/profile.component.ts",{"_index":594,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts:10",{"_index":600,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:16",{"_index":603,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:17",{"_index":605,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:18",{"_index":604,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:19",{"_index":602,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:27",{"_index":601,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/signup.service.ts",{"_index":679,"title":{},"body":{"injectables/SignupService.html":{},"coverage.html":{}}}],["src/app/signup.service.ts:16",{"_index":698,"title":{},"body":{"injectables/SignupService.html":{}}}],["src/app/signup.service.ts:20",{"_index":697,"title":{},"body":{"injectables/SignupService.html":{}}}],["src/app/signup.service.ts:24",{"_index":684,"title":{},"body":{"injectables/SignupService.html":{}}}],["src/app/signup.service.ts:41",{"_index":687,"title":{},"body":{"injectables/SignupService.html":{}}}],["src/app/signup.service.ts:50",{"_index":691,"title":{},"body":{"injectables/SignupService.html":{}}}],["src/app/signup.service.ts:59",{"_index":696,"title":{},"body":{"injectables/SignupService.html":{}}}],["src/app/signup/signup.component.ts",{"_index":611,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/signup/signup.component.ts:17",{"_index":633,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/signup/signup.component.ts:21",{"_index":630,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/signup/signup.component.ts:26",{"_index":634,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/signup/signup.component.ts:30",{"_index":636,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/signup/signup.component.ts:35",{"_index":641,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/signup/signup.component.ts:39",{"_index":642,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/signup/signup.component.ts:43",{"_index":623,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/signup/signup.component.ts:57",{"_index":629,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/signup/signup.component.ts:75",{"_index":625,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/signup/signup.component.ts:82",{"_index":627,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/signup/signup.component.ts:89",{"_index":628,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/user.ts",{"_index":709,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/user.ts:10",{"_index":717,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:11",{"_index":716,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:12",{"_index":714,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:13",{"_index":713,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:14",{"_index":718,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:4",{"_index":711,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:8",{"_index":715,"title":{},"body":{"classes/User.html":{}}}],["src/app/user.ts:9",{"_index":719,"title":{},"body":{"classes/User.html":{}}}],["src/environments/environment.prod.ts",{"_index":753,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":757,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":758,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":779,"title":{},"body":{"index.html":{}}}],["started",{"_index":776,"title":{"index.html":{}},"body":{}}],["statements",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{}}}],["style",{"_index":490,"title":{},"body":{"components/MainPageComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["submit",{"_index":423,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/PosterComponent.html":{},"components/SignupComponent.html":{}}}],["submits",{"_index":422,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{}}}],["submitted",{"_index":421,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{}}}],["submitting",{"_index":635,"title":{},"body":{"components/SignupComponent.html":{}}}],["succesfully",{"_index":413,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{}}}],["successful",{"_index":390,"title":{},"body":{"interfaces/IUser.html":{},"injectables/LoginService.html":{}}}],["successfull",{"_index":469,"title":{},"body":{"components/MainPageComponent.html":{}}}],["support",{"_index":805,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":806,"title":{},"body":{"modules.html":{}}}],["table",{"_index":308,"title":{},"body":{"components/FeedComponent.html":{},"components/PosterComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":632,"title":{},"body":{"components/SignupComponent.html":{}}}],["takes",{"_index":300,"title":{},"body":{"components/FeedComponent.html":{}}}],["tap",{"_index":373,"title":{},"body":{"interfaces/IUser.html":{},"injectables/LoginService.html":{}}}],["td",{"_index":310,"title":{},"body":{"components/FeedComponent.html":{},"components/PosterComponent.html":{}}}],["technologies",{"_index":788,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["test",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["th",{"_index":309,"title":{},"body":{"components/FeedComponent.html":{},"components/PosterComponent.html":{}}}],["themed",{"_index":781,"title":{},"body":{"index.html":{}}}],["thing",{"_index":320,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["thingthatposts",{"_index":580,"title":{},"body":{"components/PosterComponent.html":{}}}],["this.addcomment(this.commentbody",{"_index":535,"title":{},"body":{"components/PostComponent.html":{}}}],["this.body",{"_index":209,"title":{},"body":{"classes/Comment.html":{},"components/PosterComponent.html":{}}}],["this.comments",{"_index":248,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comments.push(res",{"_index":246,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentservice.addcomment(newcomment).subscribe((res",{"_index":245,"title":{},"body":{"components/CommentComponent.html":{},"components/PostComponent.html":{}}}],["this.commentservice.getcommentsbypost(postid).subscribe((res",{"_index":247,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.errormessage",{"_index":426,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.errorstate",{"_index":425,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.feed",{"_index":482,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.followercount",{"_index":610,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.followservice.getallfollowers(userid).subscribe((res",{"_index":609,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getallfollowers(this.userid",{"_index":608,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getcommentsbypost(this.postid",{"_index":242,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.getuserbyemail(user",{"_index":657,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.getuserbyuserame(this.user",{"_index":669,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.http.delete(this.urlfollow",{"_index":365,"title":{},"body":{"injectables/FollowService.html":{}}}],["this.http.get(`${this.url}s",{"_index":566,"title":{},"body":{"injectables/PostService.html":{}}}],["this.http.get(this.urlgetcommentsbypost",{"_index":298,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.http.get(this.urlgetfollowers",{"_index":363,"title":{},"body":{"injectables/FollowService.html":{}}}],["this.http.get(this.urlgetfollowersbyfollowerid",{"_index":364,"title":{},"body":{"injectables/FollowService.html":{}}}],["this.http.get(this.urlgetuserbyemail",{"_index":707,"title":{},"body":{"injectables/SignupService.html":{}}}],["this.http.get(this.urlgetuserbyusername",{"_index":708,"title":{},"body":{"injectables/SignupService.html":{}}}],["this.http.post",{"_index":569,"title":{},"body":{"injectables/PostService.html":{}}}],["this.http.post(this.url",{"_index":567,"title":{},"body":{"injectables/PostService.html":{}}}],["this.http.post(this.urladdcomment",{"_index":297,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.http.post(this.urladduser",{"_index":706,"title":{},"body":{"injectables/SignupService.html":{}}}],["this.http.post(this.urllogin",{"_index":396,"title":{},"body":{"interfaces/IUser.html":{},"injectables/LoginService.html":{}}}],["this.id",{"_index":509,"title":{},"body":{"classes/Post.html":{},"classes/User.html":{}}}],["this.loggeduser",{"_index":607,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.loggeduser.id",{"_index":434,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/ProfileComponent.html":{}}}],["this.loggeduser.name",{"_index":432,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"injectables/PostService.html":{}}}],["this.loggeduser.username",{"_index":430,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["this.loginservice.login(user).subscribe",{"_index":429,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{}}}],["this.name",{"_index":480,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.password",{"_index":428,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{}}}],["this.password1",{"_index":658,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.password2",{"_index":659,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.post",{"_index":210,"title":{},"body":{"classes/Comment.html":{}}}],["this.post.id",{"_index":536,"title":{},"body":{"components/PostComponent.html":{}}}],["this.post.likes",{"_index":539,"title":{},"body":{"components/PostComponent.html":{}}}],["this.postservice.getall().subscribe((res",{"_index":481,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.router.navigate(['mainpage",{"_index":436,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{}}}],["this.service.like(this.post.id).subscribe((num",{"_index":537,"title":{},"body":{"components/PostComponent.html":{}}}],["this.signupservice.adduser(this.user).subscribe((res",{"_index":646,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.signupservice.getuserbyemail(user.email).subscribe((res",{"_index":654,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.signupservice.getuserbyusername(user.username).subscribe((res",{"_index":656,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.thingthatposts.post(this.body).subscribe",{"_index":593,"title":{},"body":{"components/PosterComponent.html":{}}}],["this.url",{"_index":564,"title":{},"body":{"injectables/PostService.html":{}}}],["this.urladdcomment",{"_index":293,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.urladduser",{"_index":700,"title":{},"body":{"injectables/SignupService.html":{}}}],["this.urlfollow",{"_index":357,"title":{},"body":{"injectables/FollowService.html":{}}}],["this.urlgetcommentsbypost",{"_index":295,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.urlgetfollowers",{"_index":359,"title":{},"body":{"injectables/FollowService.html":{}}}],["this.urlgetfollowersbyfollowerid",{"_index":361,"title":{},"body":{"injectables/FollowService.html":{}}}],["this.urlgetuserbyemail",{"_index":702,"title":{},"body":{"injectables/SignupService.html":{}}}],["this.urlgetuserbyusername",{"_index":704,"title":{},"body":{"injectables/SignupService.html":{}}}],["this.urllogin",{"_index":385,"title":{},"body":{"interfaces/IUser.html":{},"injectables/LoginService.html":{}}}],["this.user",{"_index":213,"title":{},"body":{"classes/Comment.html":{},"components/SignupComponent.html":{}}}],["this.user.dob",{"_index":663,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.user.name",{"_index":592,"title":{},"body":{"components/PosterComponent.html":{}}}],["this.user.password",{"_index":665,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.user.username",{"_index":662,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.useremailvalidation",{"_index":644,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.userexists",{"_index":591,"title":{},"body":{"components/PosterComponent.html":{}}}],["this.userid",{"_index":534,"title":{},"body":{"components/PostComponent.html":{},"components/ProfileComponent.html":{}}}],["this.username",{"_index":424,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["this.userusernamevalidation",{"_index":645,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.validatecredentials",{"_index":655,"title":{},"body":{"components/SignupComponent.html":{}}}],["throwerror",{"_index":96,"title":{},"body":{"interceptors/AppInterceptorService.html":{}}}],["throwerror(error.error",{"_index":107,"title":{},"body":{"interceptors/AppInterceptorService.html":{}}}],["timestamp",{"_index":189,"title":{},"body":{"classes/Comment.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["today",{"_index":328,"title":{},"body":{"components/FirstPageComponent.html":{}}}],["top",{"_index":462,"title":{},"body":{"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/SignupComponent.html":{}}}],["total",{"_index":559,"title":{},"body":{"injectables/PostService.html":{},"components/ProfileComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["true",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":782,"title":{},"body":{"index.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppInterceptorService.html":{},"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/CommentService.html":{},"components/FeedComponent.html":{},"classes/Follow.html":{},"injectables/FollowService.html":{},"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":479,"title":{},"body":{"components/MainPageComponent.html":{},"components/ProfileComponent.html":{}}}],["unfollow",{"_index":347,"title":{},"body":{"injectables/FollowService.html":{}}}],["unfollow(follower",{"_index":353,"title":{},"body":{"injectables/FollowService.html":{}}}],["up",{"_index":330,"title":{},"body":{"components/FirstPageComponent.html":{},"index.html":{}}}],["upon",{"_index":417,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"injectables/SignupService.html":{}}}],["url",{"_index":271,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PostService.html":{},"injectables/SignupService.html":{}}}],["urladdcomment",{"_index":265,"title":{},"body":{"injectables/CommentService.html":{}}}],["urladduser",{"_index":680,"title":{},"body":{"injectables/SignupService.html":{}}}],["urlfollow",{"_index":342,"title":{},"body":{"injectables/FollowService.html":{}}}],["urlgetcommentsbypost",{"_index":266,"title":{},"body":{"injectables/CommentService.html":{}}}],["urlgetfollowers",{"_index":343,"title":{},"body":{"injectables/FollowService.html":{}}}],["urlgetfollowersbyfollowerid",{"_index":344,"title":{},"body":{"injectables/FollowService.html":{}}}],["urlgetuserbyemail",{"_index":681,"title":{},"body":{"injectables/SignupService.html":{}}}],["urlgetuserbyusername",{"_index":682,"title":{},"body":{"injectables/SignupService.html":{}}}],["urllogin",{"_index":380,"title":{},"body":{"interfaces/IUser.html":{},"injectables/LoginService.html":{}}}],["urls",{"_index":685,"title":{},"body":{"injectables/SignupService.html":{}}}],["use",{"_index":651,"title":{},"body":{"components/SignupComponent.html":{}}}],["useclass",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":789,"title":{},"body":{"index.html":{}}}],["user",{"_index":190,"title":{"classes/User.html":{}},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/FirstPageComponent.html":{},"classes/Follow.html":{},"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{}}}],["user's",{"_index":384,"title":{},"body":{"interfaces/IUser.html":{},"injectables/LoginService.html":{}}}],["user(userid",{"_index":214,"title":{},"body":{"classes/Comment.html":{}}}],["user.service",{"_index":376,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{}}}],["user.service.ts",{"_index":439,"title":{},"body":{"injectables/LoggedUserService.html":{},"coverage.html":{}}}],["user.service.ts:10",{"_index":444,"title":{},"body":{"injectables/LoggedUserService.html":{}}}],["user.service.ts:11",{"_index":443,"title":{},"body":{"injectables/LoggedUserService.html":{}}}],["user.service.ts:12",{"_index":442,"title":{},"body":{"injectables/LoggedUserService.html":{}}}],["user.service.ts:14",{"_index":441,"title":{},"body":{"injectables/LoggedUserService.html":{}}}],["useremailvalidation",{"_index":616,"title":{},"body":{"components/SignupComponent.html":{}}}],["userexists",{"_index":577,"title":{},"body":{"components/PosterComponent.html":{}}}],["userid",{"_index":197,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"injectables/FollowService.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"injectables/PostService.html":{},"components/ProfileComponent.html":{}}}],["username",{"_index":371,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/Post.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{},"injectables/SignupService.html":{},"classes/User.html":{}}}],["users",{"_index":394,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"index.html":{}}}],["users.to",{"_index":798,"title":{},"body":{"index.html":{}}}],["userusernamevalidation",{"_index":617,"title":{},"body":{"components/SignupComponent.html":{}}}],["validatecredentials",{"_index":620,"title":{},"body":{"components/SignupComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/SignupComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["variable",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":272,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/CommentService.html":{},"miscellaneous/variables.html":{}}}],["verification",{"_index":801,"title":{},"body":{"index.html":{}}}],["verify",{"_index":388,"title":{},"body":{"interfaces/IUser.html":{},"injectables/LoginService.html":{}}}],["view",{"_index":532,"title":{},"body":{"components/PostComponent.html":{},"index.html":{}}}],["void",{"_index":206,"title":{},"body":{"classes/Comment.html":{},"components/CommentComponent.html":{},"components/FeedComponent.html":{},"components/FirstPageComponent.html":{},"injectables/FollowService.html":{},"interfaces/IUser-1.html":{},"injectables/LoggedUserService.html":{},"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{},"components/ProfileComponent.html":{},"components/SignupComponent.html":{}}}],["weither",{"_index":406,"title":{},"body":{"interfaces/IUser-1.html":{},"components/LoginComponent.html":{},"components/PostComponent.html":{},"components/PosterComponent.html":{}}}],["well",{"_index":795,"title":{},"body":{"index.html":{}}}],["white",{"_index":492,"title":{},"body":{"components/MainPageComponent.html":{}}}],["width",{"_index":453,"title":{},"body":{"components/LoginComponent.html":{},"components/MainPageComponent.html":{},"components/SignupComponent.html":{}}}],["wither",{"_index":588,"title":{},"body":{"components/PosterComponent.html":{},"components/SignupComponent.html":{}}}],["woofer",{"_index":327,"title":{},"body":{"components/FirstPageComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["woofs",{"_index":787,"title":{},"body":{"index.html":{}}}],["yes",{"_index":712,"title":{},"body":{"classes/User.html":{}}}],["z",{"_index":487,"title":{},"body":{"components/MainPageComponent.html":{}}}],["zone.js",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'angular-test'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'angular-test';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'PosterComponent', 'selector': 'app-poster'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AppInterceptorService.html":{"url":"interceptors/AppInterceptorService.html","title":"interceptor - AppInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AppInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-interceptor.service.ts\n        \n\n            \n                Description\n            \n            \n                intercepts exceptions\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app-interceptor.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app-interceptor.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n/**\n * intercepts exceptions\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppInterceptorService implements HttpInterceptor {\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n  handleError(error: HttpErrorResponse): Observable {\n    console.log('error occurred');\n    return throwError(error.error);\n  }\n\n  intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next.handle(req).pipe(catchError(this.handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFirstPageComponent\n\nFirstPageComponent\n\nAppModule -->\n\nFirstPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainPageComponent\n\nMainPageComponent\n\nAppModule -->\n\nMainPageComponent->AppModule\n\n\n\n\n\nPostComponent\n\nPostComponent\n\nAppModule -->\n\nPostComponent->AppModule\n\n\n\n\n\nPosterComponent\n\nPosterComponent\n\nAppModule -->\n\nPosterComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAppModule -->\n\nSignupComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAppInterceptorService\n\nAppInterceptorService\n\nAppModule -->\n\nAppInterceptorService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CommentComponent\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            FirstPageComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MainPageComponent\n                        \n                        \n                            PostComponent\n                        \n                        \n                            PosterComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AppInterceptorService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SignupComponent } from './signup/signup.component';\nimport { FeedComponent } from './feed/feed.component';\nimport { PostComponent } from './post/post.component';\nimport { MainPageComponent } from './main-page/main-page.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { PosterComponent } from './poster/poster.component';\nimport { FirstPageComponent } from './first-page/first-page.component';\nimport { AppInterceptorService } from './app-interceptor.service';\nimport { CommentComponent } from './comment/comment.component';\nimport { ProfileComponent } from './profile/profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    FeedComponent,\n    PostComponent,\n    MainPageComponent,\n    PosterComponent,\n    FirstPageComponent,\n    CommentComponent,\n    ProfileComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    NgbModule,\n    FormsModule,\n    CommonModule,\n    HttpClientModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AppInterceptorService,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTitleText\n                            \n                            \n                                    Async\n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FirstPageComponent } from './first-page/first-page.component';\nimport { LoginComponent } from './login/login.component';\nimport { MainPageComponent } from './main-page/main-page.component';\nimport { SignupComponent } from './signup/signup.component';\n\nconst routes: Routes = [\n  { path: '', component: FirstPageComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'mainPage', component: MainPageComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comment.html":{"url":"classes/Comment.html","title":"class - Comment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/comment.ts\n        \n\n            \n                Description\n            \n            \n                holds data for a comment\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                Id\n                            \n                            \n                                post\n                            \n                            \n                                timestamp\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setPost\n                            \n                            \n                                    Public\n                                setUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(body: string, postId: number, userId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/comment.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        postId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comment.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comment.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            post\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Post\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comment.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comment.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comment.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPost(postId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/comment.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    postId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/comment.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Post } from './post';\nimport { User } from './user';\n\n/**\n * holds data for a comment\n */\nexport class Comment {\n  Id: number;\n  body: string;\n  timestamp: Date;\n  post: Post;\n  user: User;\n\n  constructor(body: string, postId: number, userId: number) {\n    this.body = body;\n    this.post = new Post(postId);\n    this.user = new User(userId);\n  }\n\n  public setUser(userId: number): void {\n    this.user = new User(userId);\n  }\n\n  public setPost(postId: number): void {\n    this.post = new Post(postId);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentComponent.html":{"url":"components/CommentComponent.html","title":"component - CommentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CommentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/comment/comment.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment\n            \n\n            \n                styleUrls\n                ./comment.component.css\n            \n\n\n\n            \n                templateUrl\n                ./comment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addComment\n                            \n                            \n                                    Private\n                                getCommentsByPost\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                postId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(commentService: CommentService)\n                    \n                \n                        \n                            \n                                Defined in src/app/comment/comment.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commentService\n                                                  \n                                                        \n                                                                        CommentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        body\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/comment/comment.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        postId\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/comment/comment.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addComment(body: string, userId: number, postId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/comment/comment.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    postId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCommentsByPost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCommentsByPost(postId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/comment/comment.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    postId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/comment/comment.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comment[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comment/comment.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChange,\n  SimpleChanges,\n} from '@angular/core';\nimport { Comment } from '../comment';\nimport { CommentService } from '../comment.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css'],\n})\nexport class CommentComponent implements OnInit {\n  comments: Comment[];\n  @Input() postId: number;\n  @Input() body: string;\n  constructor(private commentService: CommentService) {}\n\n  ngOnInit(): void {\n    console.log(this.postId);\n    this.getCommentsByPost(this.postId);\n  }\n\n  private addComment(body: string, userId: number, postId: number): void {\n    const newComment = new Comment(body, postId, userId);\n    this.commentService.addComment(newComment).subscribe((res) => {\n      this.comments.push(res);\n    });\n  }\n  private getCommentsByPost(postId: number): void {\n    this.commentService.getCommentsByPost(postId).subscribe((res) => {\n      this.comments = res;\n      console.log(this.comments);\n    });\n  }\n}\n\n    \n\n    \n        \n  {{ comment[\"post\"].name }}\n  {{ comment[\"post\"][\"user\"][\"username\"] }}:\n    {{ comment.body }}\n\n\n    \n\n    \n                \n                    ./comment.component.css\n                \n                #addCommentInput {\n  height: 20px;\n  font-size: 12pt;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ comment[\"post\"].name }}  {{ comment[\"post\"][\"user\"][\"username\"] }}:    {{ comment.body }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'PosterComponent', 'selector': 'app-poster'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CommentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentService.html":{"url":"injectables/CommentService.html","title":"injectable - CommentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CommentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/comment.service.ts\n        \n\n            \n                Description\n            \n            \n                makes all calls to the server for comments\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                urlAddComment\n                            \n                            \n                                    Private\n                                urlGetCommentsByPost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addComment\n                            \n                            \n                                    Public\n                                getCommentsByPost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/comment.service.ts:20\n                            \n                        \n\n                \n                    \n                            instantiates some url variables\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                injected http client\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addComment(comment: Comment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/comment.service.ts:35\n                \n            \n\n\n            \n                \n                    adds a comment to the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    comment\n                                    \n                                                Comment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the comment object to add\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        http observable: settles request and returns comment\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCommentsByPost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCommentsByPost(postId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/comment.service.ts:44\n                \n            \n\n\n            \n                \n                    finds all pomments of a specific post\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    postId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of post\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        http observable: settles request and returns a list of comments\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlAddComment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comment.service.ts:16\n                            \n                        \n\n                \n                    \n                        url for adding a comment\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlGetCommentsByPost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comment.service.ts:20\n                            \n                        \n\n                \n                    \n                        url for retrieving comments\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Comment } from './comment';\n\n/**\n * makes all calls to the server for comments\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CommentService {\n  /**\n   * url for adding a comment\n   */\n  private urlAddComment: string;\n  /**\n   * url for retrieving comments\n   */\n  private urlGetCommentsByPost: string;\n  /**\n   * instantiates some url variables\n   * @param http injected http client\n   */\n  constructor(private http: HttpClient) {\n    this.urlAddComment = 'http://localhost:9000/comment';\n    this.urlGetCommentsByPost = 'http://localhost:9000/comment/post/';\n  }\n\n  /**\n   * adds a comment to the database\n   * @param comment the comment object to add\n   * @returns http observable: settles request and returns comment\n   */\n  public addComment(comment: Comment): Observable {\n    return this.http.post(this.urlAddComment, comment);\n  }\n\n  /**\n   * finds all pomments of a specific post\n   * @param postId id of post\n   * @returns http observable: settles request and returns a list of comments\n   */\n  public getCommentsByPost(postId: number): Observable {\n    return this.http.get(this.urlGetCommentsByPost + postId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feed/feed.component.ts\n\n\n    \n        Description\n    \n    \n        takes a list of post objects to display\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-feed\n            \n\n            \n                styleUrls\n                ./feed.component.css\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                posts\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        posts\n                    \n                \n                \n                    \n                        Type :         Post[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/feed/feed.component.ts:16\n                            \n                        \n                \n                    \n                        A list of posts to display\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Post } from '../post';\n\n/**\n * takes a list of post objects to display\n */\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.css'],\n})\nexport class FeedComponent implements OnInit {\n  /**\n   * A list of posts to display\n   */\n  @Input() posts: Post[];\n\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./feed.component.css\n                \n                table,\nth,\ntd {\n  border: 1px solid black;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'PosterComponent', 'selector': 'app-poster'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FirstPageComponent.html":{"url":"components/FirstPageComponent.html","title":"component - FirstPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FirstPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/first-page/first-page.component.ts\n\n\n    \n        Description\n    \n    \n        A cool page designed to be the first thing a user will look at\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-first-page\n            \n\n            \n                styleUrls\n                ./first-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./first-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * A cool page designed to be the first thing a user will look at\n */\n@Component({\n  selector: 'app-first-page',\n  templateUrl: './first-page.component.html',\n  styleUrls: ['./first-page.component.css'],\n})\nexport class FirstPageComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n        \n          Happening Now\n        \n        Join Woofer today\n        \n          sign up\n            Log in\n        \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./first-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Happening Now                Join Woofer today                  sign up            Log in                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'PosterComponent', 'selector': 'app-poster'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FirstPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Follow.html":{"url":"classes/Follow.html","title":"class - Follow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Follow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/follow.ts\n        \n\n            \n                Description\n            \n            \n                object that holds follower data\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                follower\n                            \n                            \n                                id\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            follower\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/follow.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/follow.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/follow.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user';\n\n/**\n * object that holds follower data\n */\nexport class Follow {\n  id: number;\n  follower: User;\n  user: User;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FollowService.html":{"url":"injectables/FollowService.html","title":"injectable - FollowService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FollowService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/follow.service.ts\n        \n\n            \n                Description\n            \n            \n                makes all calls to the api for followers\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                urlFollow\n                            \n                            \n                                urlGetFollowers\n                            \n                            \n                                urlGetFollowersByFollowerId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllFollowers\n                            \n                            \n                                getFollowersByFollowerId\n                            \n                            \n                                unfollow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/follow.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllFollowers\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllFollowers(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/follow.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFollowersByFollowerId\n                        \n                        \n                    \n                \n            \n            \n                \ngetFollowersByFollowerId(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/follow.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unfollow\n                        \n                        \n                    \n                \n            \n            \n                \nunfollow(follower: Follow)\n                \n            \n\n\n            \n                \n                    Defined in src/app/follow.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    follower\n                                    \n                                                Follow\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urlFollow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/follow.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urlGetFollowers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/follow.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urlGetFollowersByFollowerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/follow.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Follow } from './follow';\n\n/**\n * makes all calls to the api for followers\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FollowService {\n  urlFollow: string;\n  urlGetFollowers: string;\n  urlGetFollowersByFollowerId: string;\n  constructor(private http: HttpClient) {\n    this.urlFollow = 'http://localhost:9000/follow/';\n    this.urlGetFollowers = 'http://localhost:9000/follow/countbyuser/';\n    this.urlGetFollowersByFollowerId = 'http://localhost:9000/follow/follower/';\n  }\n\n  getAllFollowers(userId: number): Observable {\n    return this.http.get(this.urlGetFollowers + userId);\n  }\n\n  getFollowersByFollowerId(userId: number): Observable {\n    return this.http.get(this.urlGetFollowersByFollowerId + userId);\n  }\n\n  unfollow(follower: Follow): void {\n    this.http.delete(this.urlFollow + follower);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { LoggedUserService } from './logged-user.service';\nimport { User } from './user';\n\ninterface IUser {\n  username: string;\n  password: string;\n}\n\n/**\n * Provider for logging in a User\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  private urlLogin: string;\n  /**\n   *\n   * @param loggedUser The Service that will save the logged in user's info\n   */\n  constructor(private http: HttpClient, private loggedUser: LoggedUserService) {\n    this.urlLogin = 'http://localhost:9000/user/login';\n  }\n\n  /**\n   * Attempts to verify the user's credentials and, if successful, log them in\n   * @param username The username that was entered to be checked by the backend\n   * @param password The password that was entered to be checked by the backend\n   * @returns The logged in users info\n   */\n  public login(user: IUser): Observable {\n    return this.http.post(this.urlLogin, user);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser-1.html":{"url":"interfaces/IUser-1.html","title":"interface - IUser-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoggedUserService } from '../logged-user.service';\nimport { LoginService } from '../login.service';\n\ninterface IUser {\n  username: string;\n  password: string;\n}\n\n/**\n * defines the page in which a login will be recieved\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  /**\n   * the inputed users username\n   */\n  username: string;\n  /**\n   * the inputed users password\n   */\n  password: string;\n\n  /**\n   * weither their has been an error that needs to be given to the user\n   */\n  errorState = false;\n  /**\n   * message to display on error\n   */\n  errorMessage = '';\n\n  /**\n   * weither the user has succesfully logged in\n   */\n  loggedIn: boolean;\n\n  /**\n   *\n   * @param loginService injectable login service\n   * @param router injectable router\n   * @param loggedUser injectable logged user\n   */\n  constructor(\n    private loginService: LoginService,\n    private router: Router,\n    private loggedUser: LoggedUserService\n  ) {}\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {}\n\n  /**\n   * runs upon button press: derermins weither the user can be submitted, than submits them\n   */\n  submit(): void {\n    if (!this.username) {\n      this.errorState = true;\n      this.errorMessage = 'Username is required';\n    } else if (!this.password) {\n      this.errorState = true;\n      this.errorMessage = 'Password is required';\n    } else {\n      const user: IUser = {\n        username: this.username,\n        password: this.password,\n      };\n\n      this.loginService.login(user).subscribe(\n        (res) => {\n          this.loggedUser.username = res.username;\n          this.loggedUser.name = res.name;\n          this.loggedUser.id = res.id;\n\n          this.router.navigate(['mainPage']);\n        },\n        (error) => {\n          console.log(`Error recieved from interceptor: ${error}`);\n          this.errorMessage = error;\n          this.errorState = true;\n        }\n      );\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggedUserService.html":{"url":"injectables/LoggedUserService.html","title":"injectable - LoggedUserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggedUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/logged-user.service.ts\n        \n\n            \n                Description\n            \n            \n                holds data for the logged user\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/logged-user.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/logged-user.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logged-user.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logged-user.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logged-user.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * holds data for the logged user\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoggedUserService {\n  username: string;\n  name: string;\n  id: number;\n\n  public logout() {}\n\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        defines the page in which a login will be recieved\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                errorState\n                            \n                            \n                                loggedIn\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loginService: LoginService, router: Router, loggedUser: LoggedUserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                injectable login service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                injectable router\n\n                                                        \n                                                \n                                                \n                                                        loggedUser\n                                                  \n                                                        \n                                                                        LoggedUserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                injectable logged user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:63\n                \n            \n\n\n            \n                \n                    runs upon button press: derermins weither the user can be submitted, than submits them\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:36\n                            \n                        \n\n                \n                    \n                        message to display on error\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                        weither their has been an error that needs to be given to the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:41\n                            \n                        \n\n                \n                    \n                        weither the user has succesfully logged in\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        the inputed users password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                        the inputed users username\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoggedUserService } from '../logged-user.service';\nimport { LoginService } from '../login.service';\n\ninterface IUser {\n  username: string;\n  password: string;\n}\n\n/**\n * defines the page in which a login will be recieved\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  /**\n   * the inputed users username\n   */\n  username: string;\n  /**\n   * the inputed users password\n   */\n  password: string;\n\n  /**\n   * weither their has been an error that needs to be given to the user\n   */\n  errorState = false;\n  /**\n   * message to display on error\n   */\n  errorMessage = '';\n\n  /**\n   * weither the user has succesfully logged in\n   */\n  loggedIn: boolean;\n\n  /**\n   *\n   * @param loginService injectable login service\n   * @param router injectable router\n   * @param loggedUser injectable logged user\n   */\n  constructor(\n    private loginService: LoginService,\n    private router: Router,\n    private loggedUser: LoggedUserService\n  ) {}\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {}\n\n  /**\n   * runs upon button press: derermins weither the user can be submitted, than submits them\n   */\n  submit(): void {\n    if (!this.username) {\n      this.errorState = true;\n      this.errorMessage = 'Username is required';\n    } else if (!this.password) {\n      this.errorState = true;\n      this.errorMessage = 'Password is required';\n    } else {\n      const user: IUser = {\n        username: this.username,\n        password: this.password,\n      };\n\n      this.loginService.login(user).subscribe(\n        (res) => {\n          this.loggedUser.username = res.username;\n          this.loggedUser.name = res.name;\n          this.loggedUser.id = res.id;\n\n          this.router.navigate(['mainPage']);\n        },\n        (error) => {\n          console.log(`Error recieved from interceptor: ${error}`);\n          this.errorMessage = error;\n          this.errorState = true;\n        }\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Login to Woofer\n    \n      \n        {{ errorMessage }}\n      \n      \n        Username:\n        \n      \n      \n      \n        Password:\n        \n      \n      \n      \n        Login\n      \n      signup\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .card {\n  width: 20rem;\n  margin: 0 auto;\n  float: none;\n  margin-bottom: 10px;\n  margin-top: 20px;\n}\n\n.error {\n  color: red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Login to Woofer                  {{ errorMessage }}                    Username:                                  Password:                                  Login            signup      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'PosterComponent', 'selector': 'app-poster'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login.service.ts\n        \n\n            \n                Description\n            \n            \n                Provider for logging in a User\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                urlLogin\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, loggedUser: LoggedUserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        loggedUser\n                                                  \n                                                        \n                                                                        LoggedUserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Service that will save the logged in user's info\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:35\n                \n            \n\n\n            \n                \n                    Attempts to verify the user's credentials and, if successful, log them in\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        The logged in users info\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { LoggedUserService } from './logged-user.service';\nimport { User } from './user';\n\ninterface IUser {\n  username: string;\n  password: string;\n}\n\n/**\n * Provider for logging in a User\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  private urlLogin: string;\n  /**\n   *\n   * @param loggedUser The Service that will save the logged in user's info\n   */\n  constructor(private http: HttpClient, private loggedUser: LoggedUserService) {\n    this.urlLogin = 'http://localhost:9000/user/login';\n  }\n\n  /**\n   * Attempts to verify the user's credentials and, if successful, log them in\n   * @param username The username that was entered to be checked by the backend\n   * @param password The password that was entered to be checked by the backend\n   * @returns The logged in users info\n   */\n  public login(user: IUser): Observable {\n    return this.http.post(this.urlLogin, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainPageComponent.html":{"url":"components/MainPageComponent.html","title":"component - MainPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/main-page.component.ts\n\n\n    \n        Description\n    \n    \n        page routed to after successfull login, by default displays all posts\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-page\n            \n\n            \n                styleUrls\n                ./main-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./main-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                feed\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loggedUser: LoggedUserService, postService: PostService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/main-page.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loggedUser\n                                                  \n                                                        \n                                                                        LoggedUserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                injected logged user service\n\n                                                        \n                                                \n                                                \n                                                        postService\n                                                  \n                                                        \n                                                                        PostService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                injected post service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-page/main-page.component.ts:38\n                \n            \n\n\n            \n                \n                    fetches the logged users name than fetches all posts\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            feed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Post[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-page/main-page.component.ts:23\n                            \n                        \n\n                \n                    \n                        list of posts that will be displayed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main-page/main-page.component.ts:18\n                            \n                        \n\n                \n                    \n                        name of the loggedin user\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LoggedUserService } from '../logged-user.service';\nimport { Post } from '../post';\nimport { PostService } from '../post.service';\n\n/**\n * page routed to after successfull login, by default displays all posts\n */\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.css'],\n})\nexport class MainPageComponent implements OnInit {\n  /**\n   * name of the loggedin user\n   */\n  name: string;\n\n  /**\n   * list of posts that will be displayed\n   */\n  feed: Post[] = [];\n\n  /**\n   *\n   * @param loggedUser injected logged user service\n   * @param postService injected post service\n   */\n  constructor(\n    private loggedUser: LoggedUserService,\n    private postService: PostService\n  ) {}\n\n  /**\n   * fetches the logged users name than fetches all posts\n   */\n  ngOnInit(): void {\n    if (this.loggedUser.name !== undefined) {\n      this.name = this.loggedUser.name;\n    }\n\n    this.postService.getAll().subscribe((res) => (this.feed = res));\n  }\n}\n\n    \n\n    \n        \n  {{ name }}\n  \n\n\n\n  \n\n  \n\n\n    \n\n    \n                \n                    ./main-page.component.css\n                \n                header {\n  position: fixed;\n  width: 100%;\n  top: 0;\n  z-index: 10;\n  padding: 10px;\n  border-bottom-style: solid;\n  background-color: white;\n  border-color: black;\n}\n\n.content {\n  margin-top: 5rem;\n  margin-left: 10rem;\n  margin-right: 10rem;\n  overflow: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ name }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'PosterComponent', 'selector': 'app-poster'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Post.html":{"url":"classes/Post.html","title":"class - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post.ts\n        \n\n            \n                Description\n            \n            \n                holds data for a post\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                comments\n                            \n                            \n                                id\n                            \n                            \n                                likes\n                            \n                            \n                                name\n                            \n                            \n                                userId\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/post.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Post {\n  constructor(id: number) {\n    this.id = id;\n  }\n  username: string;\n  name: string;\n  body: string;\n  likes: number;\n  comments: number;\n  userId: number;\n  id: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostComponent.html":{"url":"components/PostComponent.html","title":"component - PostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/post/post.component.ts\n\n\n    \n        Description\n    \n    \n        displays a single post\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-post\n            \n\n            \n                styleUrls\n                ./post.component.css\n            \n\n\n\n            \n                templateUrl\n                ./post.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                commentBody\n                            \n                            \n                                showComments\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addComment\n                            \n                            \n                                    Public\n                                commentBtn\n                            \n                            \n                                like\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                post\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(commentService: CommentService, loggedUser: LoggedUserService, service: PostService)\n                    \n                \n                        \n                            \n                                Defined in src/app/post/post.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        commentService\n                                                  \n                                                        \n                                                                        CommentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                injected comment service\n\n                                                        \n                                                \n                                                \n                                                        loggedUser\n                                                  \n                                                        \n                                                                        LoggedUserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                injected logged user service\n\n                                                        \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        PostService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                injected post service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        post\n                    \n                \n                \n                    \n                        Type :         Post\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/post/post.component.ts:21\n                            \n                        \n                \n                    \n                        the post to display\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addComment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addComment(body: string, userId: number, postId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/post/post.component.ts:66\n                \n            \n\n\n            \n                \n                    adds a comment to the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        comment body\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of current user\n\n                                    \n                                \n                                \n                                    postId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of relevent post (why is this a parameter when you can grab it as a attribute?)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            commentBtn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    commentBtn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/post/post.component.ts:56\n                \n            \n\n\n            \n                \n                    runs upon a button press: creates a comment\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            like\n                        \n                        \n                    \n                \n            \n            \n                \nlike()\n                \n            \n\n\n            \n                \n                    Defined in src/app/post/post.component.ts:74\n                \n            \n\n\n            \n                \n                    runs upon button press: likes a post\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/post/post.component.ts:49\n                \n            \n\n\n            \n                \n                    fetches the logged users id\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            commentBody\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post/post.component.ts:33\n                            \n                        \n\n                \n                    \n                        idk\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showComments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post/post.component.ts:29\n                            \n                        \n\n                \n                    \n                        weither the user has elected to view this posts comments\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post/post.component.ts:25\n                            \n                        \n\n                \n                    \n                        id of the logged user\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { CommentService } from '../comment.service';\nimport { Post } from '../post';\n\nimport { Comment } from '../comment';\nimport { LoggedUserService } from '../logged-user.service';\nimport { PostService } from '../post.service';\n\n/**\n * displays a single post\n */\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css'],\n})\nexport class PostComponent implements OnInit {\n  /**\n   * the post to display\n   */\n  @Input() post: Post;\n  /**\n   * id of the logged user\n   */\n  userId: number;\n  /**\n   * weither the user has elected to view this posts comments\n   */\n  showComments: boolean;\n  /**\n   * idk\n   */\n  commentBody: string;\n\n  /**\n   * @param commentService injected comment service\n   * @param loggedUser injected logged user service\n   * @param service injected post service\n   */\n  constructor(\n    private commentService: CommentService,\n    private loggedUser: LoggedUserService,\n    private service: PostService\n  ) {}\n\n  /**\n   * fetches the logged users id\n   */\n  ngOnInit(): void {\n    this.userId = this.loggedUser.id;\n  }\n\n  /**\n   * runs upon a button press: creates a comment\n   */\n  public commentBtn(): void {\n    this.addComment(this.commentBody, this.userId, this.post.id);\n  }\n\n  /**\n   * adds a comment to the database\n   * @param body comment body\n   * @param userId id of current user\n   * @param postId id of relevent post (why is this a parameter when you can grab it as a attribute?)\n   */\n  private addComment(body: string, userId: number, postId: number): void {\n    const newComment = new Comment(body, postId, userId);\n    this.commentService.addComment(newComment).subscribe((res) => {});\n  }\n\n  /**\n   * runs upon button press: likes a post\n   */\n  like(): void {\n    this.service.like(this.post.id).subscribe((num) => {\n      if (num >= 0) {\n        this.post.likes = num;\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  {{ post.name }}\n  &nbsp;\n  @{{ post.username }}\n  {{ post.body }}\n   Likes: {{ post.likes }} \n  \n    ------------------------------------------\n    \n  \n  \n  Comment\n  \n  \n  Show Comments\n  Close Comments\n\n\n    \n\n    \n                \n                    ./post.component.css\n                \n                h4 {\n  display: inline;\n}\n\n.username {\n  color: gray;\n}\n\n.content {\n  padding: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ post.name }}     @{{ post.username }}  {{ post.body }}   Likes: {{ post.likes }}       ------------------------------------------          Comment      Show Comments  Close Comments'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'PosterComponent', 'selector': 'app-poster'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostService.html":{"url":"injectables/PostService.html","title":"injectable - PostService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PostService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/post.service.ts\n        \n\n            \n                Description\n            \n            \n                makes all api calls for posts\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                            \n                                like\n                            \n                            \n                                post\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, loggedUser: LoggedUserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/post.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                injected http client\n\n                                                        \n                                                \n                                                \n                                                        loggedUser\n                                                  \n                                                        \n                                                                        LoggedUserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                injected logged user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/post.service.ts:30\n                \n            \n\n\n            \n                \n                    retrieves all of the posts\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable that retrieves a list of all posts upon completion\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            like\n                        \n                        \n                    \n                \n            \n            \n                \nlike(postId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/post.service.ts:56\n                \n            \n\n\n            \n                \n                    likes a post\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    postId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of post to like\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        observable that returns the number of total likes for relevent post upon completion\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            post\n                        \n                        \n                    \n                \n            \n            \n                \npost(body: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/post.service.ts:39\n                \n            \n\n\n            \n                \n                    adds a post to the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        body of the post\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        observable that returns nothing upon completion\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/post.service.ts:17\n                            \n                        \n\n                \n                    \n                        url for makeing post calls\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LoggedUserService } from './logged-user.service';\nimport { Post } from './post';\n\n/**\n * makes all api calls for posts\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostService {\n  /**\n   * url for makeing post calls\n   */\n  private url: string;\n  /**\n   * @param http injected http client\n   * @param loggedUser injected logged user\n   */\n  constructor(private http: HttpClient, private loggedUser: LoggedUserService) {\n    this.url = 'http://localhost:9000/post';\n  }\n\n  /**\n   * retrieves all of the posts\n   * @returns observable that retrieves a list of all posts upon completion\n   */\n  getAll(): Observable {\n    return this.http.get(`${this.url}s`);\n  }\n\n  /**\n   * adds a post to the database\n   * @param body body of the post\n   * @returns observable that returns nothing upon completion\n   */\n  post(body: string): Observable {\n    if (this.loggedUser.name) {\n      return this.http.post(this.url, {\n        body: `${body}`,\n        userId: this.loggedUser.id,\n      });\n    } else {\n      alert('there is no logged user');\n      return new Observable();\n    }\n  }\n\n  /**\n   * likes a post\n   * @param postId id of post to like\n   * @returns observable that returns the number of total likes for relevent post upon completion\n   */\n  like(postId: number): Observable {\n    return this.http.post(\n      `http://localhost:9000/like/${this.loggedUser.id}/${postId}`,\n      null\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PosterComponent.html":{"url":"components/PosterComponent.html","title":"component - PosterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PosterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/poster/poster.component.ts\n\n\n    \n        Description\n    \n    \n        component for createing a post\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-poster\n            \n\n            \n                styleUrls\n                ./poster.component.css\n            \n\n\n\n            \n                templateUrl\n                ./poster.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                userExists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(thingThatPosts: PostService, user: LoggedUserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/poster/poster.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        thingThatPosts\n                                                  \n                                                        \n                                                                        PostService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                injected post service\n\n                                                        \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        LoggedUserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                injected user service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/poster/poster.component.ts:36\n                \n            \n\n\n            \n                \n                    determins weither a user exists\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/poster/poster.component.ts:43\n                \n            \n\n\n            \n                \n                    posts the post\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/poster/poster.component.ts:17\n                            \n                        \n\n                \n                    \n                        body of the post\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userExists\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/poster/poster.component.ts:22\n                            \n                        \n\n                \n                    \n                        weither their is a user\nthis is paired with a directive that decides wither the component is even shown\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LoggedUserService } from '../logged-user.service';\nimport { PostService } from '../post.service';\n\n/**\n * component for createing a post\n */\n@Component({\n  selector: 'app-poster',\n  templateUrl: './poster.component.html',\n  styleUrls: ['./poster.component.css'],\n})\nexport class PosterComponent implements OnInit {\n  /**\n   * body of the post\n   */\n  body: string;\n  /**\n   * weither their is a user\n   * this is paired with a directive that decides wither the component is even shown\n   */\n  userExists: boolean;\n\n  /**\n   * @param thingThatPosts injected post service\n   * @param user injected user service\n   */\n  constructor(\n    private thingThatPosts: PostService,\n    private user: LoggedUserService\n  ) {}\n\n  /**\n   * determins weither a user exists\n   */\n  ngOnInit(): void {\n    this.userExists = !!this.user.name;\n  }\n\n  /**\n   * posts the post\n   */\n  submit(): void {\n    this.thingThatPosts.post(this.body).subscribe();\n    this.body = '';\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        New Post\n        \n        \n        Post\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./poster.component.css\n                \n                h4 {\n  display: inline;\n}\n\n.username {\n  color: gray;\n}\n\n.content {\n  padding: 5px;\n}\n\ntable,\nth,\ntd {\n  border: 1px solid black;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    New Post                        Post            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'PosterComponent', 'selector': 'app-poster'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PosterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                followerCount\n                            \n                            \n                                userId\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllFollowers\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(followService: FollowService, loggedUser: LoggedUserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        followService\n                                                  \n                                                        \n                                                                        FollowService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggedUser\n                                                  \n                                                        \n                                                                        LoggedUserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllFollowers\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllFollowers(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            followerCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FollowService } from '../follow.service';\nimport { LoggedUserService } from '../logged-user.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n})\nexport class ProfileComponent implements OnInit {\n  constructor(\n    private followService: FollowService,\n    private loggedUser: LoggedUserService\n  ) {}\n\n  public followerCount: number;\n  public username: string;\n  userId: number;\n  ngOnInit(): void {\n    if (this.loggedUser !== undefined) {\n      this.userId = this.loggedUser.id;\n      this.username = this.loggedUser.username;\n    }\n    this.getAllFollowers(this.userId);\n  }\n\n  getAllFollowers(userId: number): void {\n    this.followService.getAllFollowers(userId).subscribe((res) => {\n      this.followerCount = res;\n    });\n  }\n}\n\n    \n\n    \n        \n  Total followers: {{ followerCount }}\n\n\n    \n\n    \n                \n                    ./profile.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Total followers: {{ followerCount }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'PosterComponent', 'selector': 'app-poster'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/signup/signup.component.ts\n\n\n    \n        Description\n    \n    \n        component for createing a user\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                styleUrls\n                ./signup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                errorState\n                            \n                            \n                                password1\n                            \n                            \n                                password2\n                            \n                            \n                                user\n                            \n                            \n                                userEmailValidation\n                            \n                            \n                                userUsernameValidation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserByEmail\n                            \n                            \n                                getUserByUserame\n                            \n                            \n                                submit\n                            \n                            \n                                validateCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(signupService: SignupService)\n                    \n                \n                        \n                            \n                                Defined in src/app/signup/signup.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        signupService\n                                                  \n                                                        \n                                                                        SignupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                injected signup service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserByEmail\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserByEmail(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/signup/signup.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserByUserame\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserByUserame(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/signup/signup.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/signup/signup.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateCredentials\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateCredentials()\n                \n            \n\n\n            \n                \n                    Defined in src/app/signup/signup.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup.component.ts:21\n                            \n                        \n\n                \n                    \n                        error that will fill the error tag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup.component.ts:17\n                            \n                        \n\n                \n                    \n                        determins wither to display the error tag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup.component.ts:26\n                            \n                        \n\n                \n                    \n                        submitting password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup.component.ts:30\n                            \n                        \n\n                \n                    \n                        password conformation, intended to block submit when not equal to password1\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup.component.ts:35\n                            \n                        \n\n                \n                    \n                        user object to submit\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userEmailValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup.component.ts:39\n                            \n                        \n\n                \n                    \n                        idk\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userUsernameValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup/signup.component.ts:43\n                            \n                        \n\n                \n                    \n                        idk\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SignupService } from '../signup.service';\nimport { User } from '../user';\n\n/**\n * component for createing a user\n */\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnInit {\n  /**\n   * determins wither to display the error tag\n   */\n  errorState = false;\n  /**\n   * error that will fill the error tag\n   */\n  errorMessage = '';\n\n  /**\n   * submitting password\n   */\n  password1: string;\n  /**\n   * password conformation, intended to block submit when not equal to password1\n   */\n  password2: string;\n\n  /**\n   * user object to submit\n   */\n  user: User;\n  /**\n   * idk\n   */\n  userEmailValidation: User;\n  /**\n   * idk\n   */\n  userUsernameValidation: User;\n\n  /**\n   * @param signupService injected signup service\n   */\n  constructor(private signupService: SignupService) {}\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.user = new User();\n  }\n\n  validateCredentials(): void {\n    if (\n      this.userEmailValidation == null &&\n      this.userUsernameValidation == null\n    ) {\n      this.signupService.addUser(this.user).subscribe((res) => {});\n      alert('user created');\n    } else {\n      if (this.userEmailValidation == null) {\n        alert('Username already in use');\n      } else if (this.userUsernameValidation == null) {\n        alert('Email already in use');\n      } else {\n        alert('Username and email already in use');\n      }\n    }\n  }\n\n  getUserByEmail(user: User): void {\n    this.signupService.getUserByEmail(user.email).subscribe((res) => {\n      this.userEmailValidation = res;\n      this.validateCredentials();\n    });\n  }\n\n  getUserByUserame(user: User): void {\n    this.signupService.getUserByUsername(user.username).subscribe((res) => {\n      this.userUsernameValidation = res;\n      this.getUserByEmail(user);\n    });\n  }\n\n  submit(): void {\n    this.errorState = false;\n    if (this.password1 !== this.password2) {\n      this.errorState = true;\n      this.errorMessage = 'Passwords must match';\n    } else if (!this.user.username) {\n      this.errorState = true;\n      this.errorMessage = 'Username is required';\n    } else if (!this.password1) {\n      this.errorState = true;\n      this.errorMessage = 'Password is required';\n    } else if (!this.user.dob) {\n      this.errorState = true;\n      this.errorMessage = 'Date of birth is required';\n    } else {\n      this.user.password = this.password1;\n      // Method flow: getUserByUsername->getUserByEmail->validateCredentials\n      this.getUserByUserame(this.user);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Enter user info\n    \n      \n        {{ errorMessage }}\n      \n      \n        \n          \n            Username:\n            \n          \n          \n          \n            Password:\n            \n          \n          \n          \n            Confirm Password:\n            \n          \n          \n          \n            Name:\n            \n          \n        \n        \n          \n            Email:\n            \n          \n          \n          \n            Date of birth:\n            \n          \n          \n          \n            Phone number:\n            \n          \n          \n          \n            Signup\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./signup.component.css\n                \n                .card {\n  width: 40rem;\n  margin: 0 auto;\n  float: none;\n  margin-bottom: 10px;\n  margin-top: 20px;\n}\n\n.error {\n  color: red;\n}\n\n.column {\n  float: left;\n  width: 50%;\n}\n\n.row:after {\n  display: table;\n  clear: both;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Enter user info                  {{ errorMessage }}                                          Username:                                                      Password:                                                      Confirm Password:                                                      Name:                                                            Email:                                                      Date of birth:                                                      Phone number:                                                      Signup                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'FeedComponent', 'selector': 'app-feed'},{'name': 'FirstPageComponent', 'selector': 'app-first-page'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'PosterComponent', 'selector': 'app-poster'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignupService.html":{"url":"injectables/SignupService.html","title":"injectable - SignupService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SignupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/signup.service.ts\n        \n\n            \n                Description\n            \n            \n                makes api calls for signup\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                urlAddUser\n                            \n                            \n                                    Private\n                                urlGetUserByEmail\n                            \n                            \n                                    Private\n                                urlGetUserByUsername\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addUser\n                            \n                            \n                                    Public\n                                getUserByEmail\n                            \n                            \n                                    Public\n                                getUserByUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/signup.service.ts:24\n                            \n                        \n\n                \n                    \n                            instantiates all urls\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                injected http client\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/signup.service.ts:41\n                \n            \n\n\n            \n                \n                    adds a user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user to add\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable that returns the added user upon resolution\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUserByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/signup.service.ts:50\n                \n            \n\n\n            \n                \n                    fetches a user with a specified email\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        email to search with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable that returns the found user upon resolution\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUserByUsername\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/signup.service.ts:59\n                \n            \n\n\n            \n                \n                    fetches a user with a specified username\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        username to search with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable that returns the found user upon resolution\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlAddUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup.service.ts:20\n                            \n                        \n\n                \n                    \n                        url for adding a user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlGetUserByEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup.service.ts:16\n                            \n                        \n\n                \n                    \n                        url for retrieving a user by email\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlGetUserByUsername\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signup.service.ts:24\n                            \n                        \n\n                \n                    \n                        url for fetching a user by their username\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from './user';\n\n/**\n * makes api calls for signup\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class SignupService {\n  /**\n   * url for retrieving a user by email\n   */\n  private urlGetUserByEmail: string;\n  /**\n   * url for adding a user\n   */\n  private urlAddUser: string;\n  /**\n   * url for fetching a user by their username\n   */\n  private urlGetUserByUsername: string;\n\n  /**\n   * instantiates all urls\n   * @param http injected http client\n   */\n  constructor(private http: HttpClient) {\n    this.urlAddUser = 'http://localhost:9000/user/add';\n    this.urlGetUserByEmail = 'http://localhost:9000/user/email/';\n    this.urlGetUserByUsername = 'http://localhost:9000/user/username/';\n  }\n\n  /**\n   * adds a user\n   * @param user user to add\n   * @returns observable that returns the added user upon resolution\n   */\n  public addUser(user: User): Observable {\n    return this.http.post(this.urlAddUser, user);\n  }\n\n  /**\n   * fetches a user with a specified email\n   * @param email email to search with\n   * @returns observable that returns the found user upon resolution\n   */\n  public getUserByEmail(email: string): Observable {\n    return this.http.get(this.urlGetUserByEmail + email);\n  }\n\n  /**\n   * fetches a user with a specified username\n   * @param username username to search with\n   * @returns observable that returns the found user upon resolution\n   */\n  public getUserByUsername(username: string): Observable {\n    return this.http.get(this.urlGetUserByUsername + username);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.ts\n        \n\n            \n                Description\n            \n            \n                holds user data\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dob\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                phone\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dob\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  constructor(id?: number) {\n    this.id = id;\n  }\n  id: number;\n  username: string;\n  password: string;\n  name: string;\n  email: string;\n  dob: string;\n  phone: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app-interceptor.service.ts\n            \n            interceptor\n            AppInterceptorService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/comment.service.ts\n            \n            injectable\n            CommentService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/comment.ts\n            \n            class\n            Comment\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/comment/comment.component.ts\n            \n            component\n            CommentComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/feed/feed.component.ts\n            \n            component\n            FeedComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/first-page/first-page.component.ts\n            \n            component\n            FirstPageComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/follow.service.ts\n            \n            injectable\n            FollowService\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/follow.ts\n            \n            class\n            Follow\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/logged-user.service.ts\n            \n            injectable\n            LoggedUserService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/login.service.ts\n            \n            injectable\n            LoginService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/login.service.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/main-page/main-page.component.ts\n            \n            component\n            MainPageComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/post.service.ts\n            \n            injectable\n            PostService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/post.ts\n            \n            class\n            Post\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/post/post.component.ts\n            \n            component\n            PostComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/poster/poster.component.ts\n            \n            component\n            PosterComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/signup.service.ts\n            \n            injectable\n            SignupService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                61 %\n                (8/13)\n            \n        \n        \n            \n                \n                src/app/user.ts\n            \n            class\n            User\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.2.13\n        \n            @angular/common : ~11.2.13\n        \n            @angular/compiler : ~11.2.13\n        \n            @angular/core : ~11.2.13\n        \n            @angular/forms : ~11.2.13\n        \n            @angular/localize : ~11.2.13\n        \n            @angular/platform-browser : ~11.2.13\n        \n            @angular/platform-browser-dynamic : ~11.2.13\n        \n            @angular/router : ~11.2.13\n        \n            @ng-bootstrap/ng-bootstrap : ^9.1.1\n        \n            bootstrap : ^4.6.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWOOFER\nProject Description\nWoofer is a full-stack dog-themed Twitter Clone. Users can create a new account and login. Users can create new posts (called woofs) and comment on other users woofs. Users can follow other users and like their woofs.\nTechnologies Used\nAngular\nBootstrap\nSpring Boot\nPostgresFeatures\nUsers can register a new account.\nUsers can login to their account.\nUsers can create new posts(woofs) as well as edit, and delete their posts.\nUsers can view other users woofs.\nUsers can like posts and follow other users.To-do list:\nJWT/OAuth authentication\nEmail verification when a user signs up\nUsers can Direct Message(DM) other users\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nAppModule -->\n\nFeedComponent->AppModule\n\n\n\n\n\nFirstPageComponent\n\nFirstPageComponent\n\nAppModule -->\n\nFirstPageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainPageComponent\n\nMainPageComponent\n\nAppModule -->\n\nMainPageComponent->AppModule\n\n\n\n\n\nPostComponent\n\nPostComponent\n\nAppModule -->\n\nPostComponent->AppModule\n\n\n\n\n\nPosterComponent\n\nPosterComponent\n\nAppModule -->\n\nPosterComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAppModule -->\n\nSignupComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAppInterceptorService\n\nAppInterceptorService\n\nAppModule -->\n\nAppInterceptorService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
